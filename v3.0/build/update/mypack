#!/bin/sh
#
# Mybox Firewall Package Manager
# based on Makeself version 2.1.x
#  by Stephane Peter <megastep@megastep.org>
#

MS_VERSION="2.1.4(070619)"
unset CDPATH

MS_Usage() {
	echo "Usage: $0 [params] package_dir file_name label [startup_script] [args]"
	echo "params can be one or more of the following :"
	echo "    --version | -v  : Print out mypack version number and exit"
	echo "    --help | -h     : Print out this help message"
 	echo "    --gzip          : Compress using gzip (default if detected)"
 	echo "    --bzip2         : Compress using bzip2 instead of gzip"
	echo "    --nocomp        : Do not compress the data"
	echo "    --notemp        : The package will create package_dir in the"
	echo "                      current directory and uncompress in ./package_dir"
	echo "    --copy          : Upon extraction, the package will first copy itself to"
	echo "                      a temporary directory"
	echo "    --append        : Append more files to an existing mypack package"
	echo "                      The label and startup scripts will then be ignored"
	echo "    --current       : Files will be extracted to the current directory."
	echo "                      Implies --notemp."
	echo "    --nomd5         : Don't calculate an MD5 for package"
	echo "    --nocrc         : Don't calculate a CRC for package"
	echo "    --header file   : Specify location of the header script"
	echo "    --follow        : Follow the symlinks in the package"
	echo "    --nowait        : Do not wait for user input after executing package"
	echo "                      program from an xterm"
	echo "    --desc file     : Text file describing the package"
	echo
	echo "Do not forget to give a fully qualified startup script name"
	echo "(i.e. with a ./ prefix if inside the package)."
	exit 1
}

# Default settings
COMPRESS=gzip
KEEP=n
CURRENT=n
APPEND=n
COPY=none
TAR_ARGS=cvf
HEADER=./mypack-header

# LSM file stuff
DESC_CMD="echo No Description. >> \"\$archname\""

while true; do
	case "$1" in
	--version | -v)
		echo mypack version $MS_VERSION
		exit 0
	;;
	--bzip2)
		COMPRESS=bzip2
		shift
	;;
	--gzip)
		COMPRESS=gzip
		shift
	;;
	--nocomp)
		COMPRESS=none
		shift
	;;
	--notemp)
		KEEP=y
		shift
	;;
	--copy)
		COPY=copy
		shift
	;;
	--current)
		CURRENT=y
		KEEP=y
		shift
	;;
	--header)
		HEADER="$2"
		shift 2
	;;
	--follow)
		TAR_ARGS=cvfh
		shift
	;;
	--nowait)
		shift
	;;
 	--nomd5)
		NOMD5=y
		shift
	;;
	--nocrc)
		NOCRC=y
		shift
	;;
	--append)
		APPEND=y
		shift
	;;
	--desc)
		DESC_CMD="cat \"$2\" >> \"\$archname\""
		shift 2
	;;
	-h | --help)
		MS_Usage
	;;
	-*)
		echo Unrecognized flag : "$1"
		MS_Usage
	;;
	*)
		break
	;;
	esac
done

archdir="$1"
archname="$2"
if test "$APPEND" = y; then
	if test $# -lt 2; then
		MS_Usage
	fi

	# Gather the info from the original package
	OLDENV=`sh "$archname" --dumpconf`
	if test $? -ne 0; then
		echo "Unable to update package: $archname" >&2
		exit 1
	else
		eval "$OLDENV"
	fi
else
	if test "$KEEP" = n -a $# = 3; then
		echo "ERROR: Making a temporary package with no package command does not make sense!" >&2
		echo
		MS_Usage
	fi
	# We don't really want to create an absolute directory...
	if test "$CURRENT" = y; then
		archdirname="."
	else
		archdirname=`basename "$1"`
	fi

	if test $# -lt 3; then
		MS_Usage
	fi

	LABEL="$3"
	SCRIPT="$4"
	test x$SCRIPT = x || shift 1
	shift 3
	SCRIPTARGS="$*"
fi

if test "$KEEP" = n -a "$CURRENT" = y; then
	echo "ERROR: It is A VERY DANGEROUS IDEA to try to combine --notemp and --current." >&2
	exit 1
fi

case $COMPRESS in
	gzip)
		GZIP_CMD="gzip -c9"
 		GUNZIP_CMD="gzip -cd"
	;;
	bzip2)
		GZIP_CMD="bzip2 -9"
		GUNZIP_CMD="bzip2 -d"
	;;
	none)
		GZIP_CMD="cat"
		GUNZIP_CMD="cat"
	;;
esac

tmpfile="${TMPDIR:=/tmp}/mypack$$"
if test -f $HEADER; then
	oldarchname="$archname"
	archname="$tmpfile"
	# Generate a fake header to count its lines
	SKIP=0
	. $HEADER
	SKIP=`cat "$tmpfile" |wc -l`
	# Get rid of any spaces
	SKIP=`expr $SKIP`
	rm -f "$tmpfile"
	echo Header is $SKIP lines long >&2
	archname="$oldarchname"
else
	echo "Unable to open header file: $HEADER" >&2
	exit 1
fi

echo

if test "$APPEND" = n; then
	if test -f "$archname"; then
		echo "WARNING: Overwriting existing file: $archname" >&2
	fi
fi

USIZE=`du -ks $archdir | cut -f1`
DATE=`LC_ALL=C date`

if test "." = "$archdirname"; then
	if test "$KEEP" = n; then
		archdirname="mypack-$$-`date +%Y%m%d%H%M%S`"
	fi
fi

test -d "$archdir" || { echo "Error: $archdir does not exist."; rm -f "$tmpfile"; exit 1; }
echo About to compress $USIZE KB of data...
echo Adding files to package named \"$archname\"...
(cd "$archdir" && ( tar $TAR_ARGS - . | eval "$GZIP_CMD" ) >> "$tmpfile") || { echo Aborting: package directory not found or temporary file: "$tmpfile" could not be created.; rm -f "$tmpfile"; exit 1; }
#echo >> "$tmpfile" >&- # try to close the package

fsize=`cat "$tmpfile" | wc -c | tr -d " "`

# Compute the checksums

md5sum=00000000000000000000000000000000
crcsum=0000000000

if test "$NOCRC" = y; then
	echo "skipping crc at user request"
else
	crcsum=`cat "$tmpfile" | CMD_ENV=xpg4 cksum | sed -e 's/ /Z/' -e 's/	/Z/' | cut -dZ -f1`
	echo "CRC: $crcsum"
fi

# Try to locate a MD5 binary
MD5_PATH=/bin/md5sum

if test "$NOMD5" = y; then
	echo "skipping md5sum at user request"
else
	if test -x "$MD5_PATH"; then
		md5sum=`cat "$tmpfile" | "$MD5_PATH" | cut -b-32`;
		echo "MD5: $md5sum"
	else
		echo "MD5: none, md5sum binary not found"
	fi
fi

if test "$APPEND" = y; then
 	mv "$archname" "$archname".bak || exit

	# Prepare entry for new package
	filesizes="$filesizes $fsize"
	CRCsum="$CRCsum $crcsum"
	MD5sum="$MD5sum $md5sum"
	USIZE=`expr $USIZE + $OLDUSIZE`
	# Generate the header
	. $HEADER
	# Append the original data
	tail -n +$OLDSKIP "$archname".bak >> "$archname"
	# Append the new data
	cat "$tmpfile" >> "$archname"

	chmod +x "$archname"
	rm -f "$archname".bak
	echo Self-extractible package \"$archname\" successfully updated.
else
	filesizes="$fsize"
 	CRCsum="$crcsum"
	MD5sum="$md5sum"

	# Generate the header
	. $HEADER

	# Append the compressed tar data after the stub
	echo
	cat "$tmpfile" >> "$archname"
	chmod +x "$archname"
	echo Self-extractible package \"$archname\" successfully created.
fi
rm -f "$tmpfile"
exit 0

