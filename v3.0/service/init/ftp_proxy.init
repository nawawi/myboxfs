#!/bin/php -Cq
<?php 
// ftp_proxy.init - last update 04-Dec-2007
if(isset($_ENV['GATEWAY_INTERFACE'])||isset($_ENV['SERVER_PROTOCOL'])) exit;
$_AWIE_CODE="ef3802a1fce98f3985e6a9a1f7c1a024";
$_SYSID="ftp_proxy";
include_once('clib.exl');
include_once('policy.exl');
putenv("PATH=/bin:/service/tools:/service/init");

$_QUIET=0;
mybox_init_set_alarm(30);

if(!file_exists("/bin/frox")) {
	mybox_init_echo($_QUIET,"ERROR","Cannot execute ftp_proxy.init. Internal error!");
	exit(1);
}

function do_clean_file() {
	@unlink("/var/sys/ftp_proxy_networks");
	@unlink("/var/sys/ftp_proxy_port");
	@unlink("/var/sys/ftp_proxy_trans.set");
}

function frox_exception(&$_trans_src,&$_trans_dst,$_networks,$db_id) {
	@unlink("/var/sys/ftp_proxy_src_ext.cache");
	@unlink("/var/sys/ftp_proxy_src_av.cache");
	@unlink("/var/sys/ftp_proxy_dst_ext.cache");
	@unlink("/var/sys/ftp_proxy_dst_av.cache");

	$_src_ext=array(); $_src_av=array();
	$_dst_ext=array(); $_dst_av=array();
	$result=mybox_db_query("select * from cf_ftp_exclude",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_name=trim($row['name']);
			$_src=$row['src'];
			$_dst=$row['dst'];
			$_av=trim($row['av']);
			$_ext=trim($row['ext']);
			$_trans=trim($row['trans']);

			$_src_a='';
			if($_src!='any' && $_src!='') {
				$_src_a=frox_networks($db_id,$_src);
				if($_src_a!='') {
					$_src_b=preg_split("/\s+/",$_src_a);
					if(count($_src_b)!=0) {
						foreach($_src_b as $ln) {
							if($_ext==1) $_src_ext[]="$ln";
							if($_av==1) $_src_av[]="$ln";
							if($_trans==1) $_trans_src[]="$ln";
						}
					}
				}
			}
			unset($_src_a,$_src_b,$ln);
			$_dst_a='';
			if($_dst!='any' && $_dst!='') {
				$_dst_a=frox_networks($db_id,$_dst);
				if($_dst_a!='') {
					$_dst_b=preg_split("/\s+/",$_dst_a);
					if(count($_dst_b)!=0) {
						foreach($_dst_b as $ln) {
							if($_ext==1) $_dst_ext[]="$ln";
							if($_av==1) $_dst_av[]="$ln";
							if($_trans==1) $_trans_dst[]="$ln";
						}
					}
				}
			}
	
		}
	}
	if(count($_src_ext)!=0) mybox_save_to_file("/var/sys/ftp_proxy_src_ext.cache",serialize($_src_ext));
	if(count($_src_av)!=0) mybox_save_to_file("/var/sys/ftp_proxy_src_av.cache",serialize($_src_av));
	if(count($_dst_ext)!=0) mybox_save_to_file("/var/sys/ftp_proxy_dst_ext.cache",serialize($_dst_ext));
	if(count($_dst_av)!=0) mybox_save_to_file("/var/sys/ftp_proxy_dst_av.cache",serialize($_dst_av));
}

function frox_trans($_networks,$_trans_src,$_trans_dst) {
	$_networks=trim($_networks);
	if($_networks=='') return;
	$_networks="$_networks ";
	$_trans_a=preg_split("/\s+/",$_networks);

	$txt='';
	$_skp=array();$_skn=array();
	$_skp1=array();
	if(count($_trans_src)!=0) {
		foreach($_trans_src as $ln) {
			if($ln=='') continue;
			$_skp[$ln]=1;
			$txt .="-s $ln -p tcp -m tcp --sport 1:65535 --dport 21 -j RETURN\n";
		}
	}
	unset($ln);
	if(count($_trans_dst)!=0) {
		foreach($_trans_dst as $ln) {
			if($ln=='') continue;
			$_skp1[$ln]=1;
			$txt .="-d $ln -p tcp -m tcp --sport 1:65535 --dport 21 -j RETURN\n";
		}
	}
	unset($ln);
	foreach($_trans_a as $ln) {
		if($ln=='') continue;
		if($_skp1[$ln]==1) continue;
		if($_skn[$ln]==1) continue;
		$_skn[$ln]=1;
		$txt .="-s $ln -p tcp -m tcp --sport 1:65535 --dport 21 -j REDIRECT --to-port 2121\n";
	}
	if($txt!='') mybox_save_to_file("/var/sys/ftp_proxy_trans.set",$txt);
}

function frox_networks($db_id,$name) {
	$_defnet_array=mybox_defnetwork_array($db_id);
	$namedev_array=mybox_name2dev_array($db_id);
	$_networks='';
	if(stripos($name,",")===FALSE) $name="$name,";

	$_nml=preg_split("/,/",$name);
	if(count($_nml)!=0) {
		foreach($_nml as $_a) {
			if($_a=='') continue;
			if(isset($namedev_array[$_a])&&$namedev_array[$_a]!='') {
				if(strpos($namedev_array[$_a],"/")===FALSE) {
					$_networks .="{$namedev_array[$_a]}/32 ";
				} else {
					$_networks .="{$namedev_array[$_a]} ";
				}
			} else {
				if(isset($_defnet_array[$_a]['name']) && $_defnet_array[$_a]['name']!='') {
					if($_defnet_array[$_a]['type']==2) {
						$_networks .="{$_defnet_array[$_a]['ip']} ";
					}
				} elseif(isset($_defnet_array[$_a]['group']) && $_defnet_array[$_a]['group']!='') {
					foreach($_defnet_array[$_a] as $a1 => $_b) {
						if(!is_array($_b)) continue;
						if($_b['type']==1) {
							$_networks .="{$_b['ip']} ";
						} elseif($_b['type']==2) {
							$_networks .="{$_b['ip']}/32 ";
						}
					}
				}
			}
		}
	} else {
		if(isset($namedev_array[$_a])&&$namedev_array[$_a]!='') {
			if(strpos($namedev_array[$_a],"/")===FALSE) {
				$_networks .="{$namedev_array[$_a]}/32 ";
			} else {
				$_networks .="{$namedev_array[$_a]} ";
			}
		} else {
			if(isset($_defnet_array[$_list_array]['name']) && $_defnet_array[$_list_array]['name']!='') {
				if($_defnet_array[$_list_array]['type']==2) {
					$_networks .="{$_defnet_array[$_list_array]['ip']} ";
				}
			} elseif(isset($_defnet_array[$_list_array]['group']) && $_defnet_array[$_list_array]['group']!='') {
				foreach($_defnet_array[$_list_array] as $a1 => $_b) {
					if(!is_array($_b)) continue;
					if($_b['type']==1) {
						$_networks .="{$_b['ip']} ";
					} elseif($_b['type']==2) {
						$_networks .="{$_b['ip']}/32 ";
					}
				}
			}
		}
	}
	unset($a);
	$_networks=trim($_networks);
	return $_networks;
}

function frox_config() {
	global $_DB_NAME, $_QUIET, $_ROOT_DIR;

	do_clean_file();

	$db_id=mybox_db_connect($_DB_NAME);
	$result=mybox_db_query("select * from cf where name like \"cf_ftp_%\" or name like \"cf_sophos%\"",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			if(trim($row['name'])=="cf_ftp_stat") $_cf_ftp_stat=trim($row['val']);
			if(trim($row['name'])=="cf_ftp_network") $_cf_ftp_network=trim($row['val']);
			if(trim($row['name'])=="cf_ftp_upload") $_cf_ftp_upload=trim($row['val']);
			if(trim($row['name'])=="cf_ftp_download") $_cf_ftp_download=trim($row['val']);
			if(trim($row['name'])=="cf_ftp_av_stat") $_cf_ftp_av_stat=trim($row['val']);
			if(trim($row['name'])=="cf_ftp_ext_stat") $_cf_ftp_ext_stat=trim($row['val']);
		}
	}
	unset($result);
	if($_cf_ftp_stat=='') $_cf_ftp_stat=0;
	if($_cf_ftp_av_stat=='') $_cf_ftp_av_stat=0;
	if($_cf_ftp_ext_stat=='') $_cf_ftp_ext_stat=0;
	if($_cf_ftp_network=='') $_cf_ftp_stat=0;

	if($_cf_sophos_stat=='' || $_cf_sophos_stat==0) $_cf_ftp_av_stat=0;

	if($_cf_ftp_stat==0) {
		mybox_init_echo($_QUIET,"INFO","FTP Proxy service disabled");
		ftp_proxy_clear();
		mybox_db_close($db_id);
		exit(1);
	}

	$_trans_src=array(); $_trans_dst=array();
	$_networks=frox_networks($db_id,$_cf_ftp_network);
	frox_exception(&$_trans_src,&$_trans_dst,$_networks,$db_id);
	frox_trans($_networks,$_trans_src,$_trans_dst);
	mybox_save_to_file("/var/sys/ftp_proxy_networks","$_networks");
	mybox_db_close($db_id);

	if(!is_dir("$_ROOT_DIR/ftpproxy")) @mybox_mkdirr("$_ROOT_DIR/ftpproxy");
	$_config='';
	$_config .="Listen 0.0.0.0\n";
	$_config .="Port 2121\n";
	$_config .="ResolvLoadHack wontresolve.doesntexist.abc\n";
	$_config .="User mfs\n";
	$_config .="Group mfs\n";
	$_config .="WorkingDir $_ROOT_DIR/ftpproxy\n";
	$_config .="DontChroot Yes\n";
	$_config .="LogLevel 15\n";
	$_config .="#LogFile /var/log/frox.log\n";
	$_config .="XferLogging no\n";
	$_config .="PidFile /var/run/frox.pid\n";
	$_config .="BounceDefend yes\n";
	if($_cf_ftp_av_stat==1 || $_cf_ftp_ext_stat==1) {
		$_config .="VirusScanner '\"/service/tools/mfs-ftpscan.exc\" \"%s\" '\n";
		$_config .="VSOK 0\n";
		$_config .="VSProgressMsgs 30\n";
	}
	$_config .="Timeout 300\n";
	$_config .="MaxForks 80\n";
	$_config .="MaxForksPerHost 5\n";
	if($_cf_ftp_download!='' && $_cf_ftp_download!=0) {
		$_config .="MaxTransferRate $_cf_ftp_download\n";
	}
	if($_cf_ftp_upload!='' && $_cf_ftp_upload!=0) {
		$_config .="MaxUploadRate $_cf_ftp_upload\n";
	}
	$_config .="ACL Allow * - *\n";
	mybox_save_to_file("/etc/frox.conf",$_config);
	$_set=array();
	$_set['cf_ftp_stat']="$_cf_ftp_stat";
	$_set['cf_ftp_network']="$_cf_ftp_network";
	$_set['cf_ftp_upload']="$_cf_ftp_upload";
	$_set['cf_ftp_download']="$_cf_ftp_download";
	$_set['cf_ftp_av_stat']="$_cf_ftp_av_stat";
	$_set['cf_ftp_ext_stat']="$_cf_ftp_ext_stat";
	mybox_save_to_file("/var/sys/ftp_proxy.set",serialize($_set));
	mybox_save_to_file("/var/sys/ftp_proxy_port","2121");
	if(file_exists("/etc/frox.conf")) return 1;
	if($_QUIET==0) echo "* Writing FTP Proxy config failed\n";
	return 0;
}

function frox_status() {
	global $_QUIET;
	$pid=mybox_get_progpid("frox");
	if($pid!='') {
		if($_QUIET==0) echo "* frox (pid $pid) is running...\n";
		return 0;
	}
	return 1;
}

function frox_start() {
	global $_QUIET, $_ROOT_DIR;


	if(file_exists("$_ROOT_DIR/scripts/ftp_proxy/start")) {
		return mybox_execq_cmd("$_ROOT_DIR/scripts/ftp_proxy/start");
	}
	if(file_exists("$_ROOT_DIR/scripts/ftp_proxy/pre-start")) {
		mybox_execq_cmd("$_ROOT_DIR/scripts/ftp_proxy/pre-start");
	}

	ftp_proxy_clear();
	do_ftp_proxy_acl_policy_clear();
	@unlink("/var/sys/chk_frox");

	if(@frox_config()==1 && @frox_status()==1) {
		if(mybox_exec_cmd("frox")==0) {
			mybox_init_echo($_QUIET,"INFO","Starting FTP Proxy service");
			if(!file_exists("/var/sys/init_no_restart")) {
				do_ftp_proxy_policy();
				do_ftp_proxy_acl_policy();
			}
			@touch("/var/sys/chk_frox");
			if(file_exists("$_ROOT_DIR/scripts/ftp_proxy/post-start")) {
				mybox_execq_cmd("$_ROOT_DIR/scripts/ftp_proxy/post-start");
			}
			return 0;
		}
	}
	mybox_init_echo($_QUIET,"ERROR","Starting FTP Proxy service failed");
	return 1;
}

function frox_stop() {
	global $_QUIET, $_ROOT_DIR;

	@unlink("/var/sys/chk_frox");
	if(!file_exists("/var/sys/init_no_restart")) {
		ftp_proxy_clear();
		do_ftp_proxy_acl_policy_clear();
	}
	do_clean_file();
	@unlink("/var/sys/ftp_proxy.set");
	@unlink("/etc/frox.conf");

	if(file_exists("$_ROOT_DIR/scripts/ftp_proxy/stop")) {
		return mybox_execq_cmd("$_ROOT_DIR/scripts/ftp_proxy/stop");
	}
	if(file_exists("$_ROOT_DIR/scripts/ftp_proxy/pre-stop")) {
		mybox_execq_cmd("$_ROOT_DIR/scripts/ftp_proxy/pre-stop");
	}
	if(mybox_killall("frox")==0) {
		mybox_init_echo($_QUIET,"INFO","Shutting down FTP Proxy service");
		if(file_exists("$_ROOT_DIR/scripts/ftp_proxy/post-stop")) {
			mybox_execq_cmd("$_ROOT_DIR/scripts/ftp_proxy/post-stop");
		}
		return 0;
	}
	mybox_init_echo($_QUIET,"ERROR","Shutting down FTP Proxy service failed");
	return 1;
}

$ret=1;
$_app=basename($_SERVER["argv"][0]);
if($_SERVER["argv"][2]=='quiet') $_QUIET=1;
switch($_SERVER["argv"][1]) {
	case 'start':
		$ret=frox_start();
		break;
	case 'stop':
		$ret=frox_stop();
		break;
	case 'restart':
		$ret=frox_stop();
		sleep(2);
		$ret=frox_start();
		break;
	case 'status':
		$ret=frox_status();
		break;
	case 'config':
		$ret=frox_config();
		break;
	default:
		echo "Usage: $_app [start/stop/restart/status]\n";
		break;
}
exit($ret);
?>
