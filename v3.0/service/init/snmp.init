#!/bin/php -Cq
<?php 
// snmp.init - last update 30-Jun-2006
// snmp.init - last update 04-Jun-2007
if(isset($_ENV['GATEWAY_INTERFACE'])||isset($_ENV['SERVER_PROTOCOL'])) exit;
$_AWIE_CODE="ef3802a1fce98f3985e6a9a1f7c1a024";
$_SYSID="snmp";
include_once('clib.exl');
include_once('policy.exl');
putenv("PATH=/bin:/service/tools:/service/init");

$_QUIET=0;
mybox_init_set_alarm(30);

if(!file_exists("/bin/snmpd")) {
	mybox_init_echo($_QUIET,"ERROR","Cannot execute snmp.init. Internal error!");
	exit(1);
}

function snmp_config() {
	global $_DB_NAME, $_QUIET;

	$_SNMP_STAT=0;
	$db_id=mybox_db_connect($_DB_NAME);
	$result=mybox_db_query("select * from service_snmp",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_SNMP_STAT=$row['stat'];
			$_SNMP_PORT=$row['port'];
			$_SNMP_COMMUNITY=$row['comm'];
			$_SNMP_SYSNAME=mybox_unescape_str($row['sysname']);
			$_SNMP_LOCATION=mybox_unescape_str($row['location']);
			$_SNMP_CONTACT=mybox_unescape_str($row['contact']);
		}
	}
	mybox_db_close($db_id);

	if($_SNMP_STAT==0) {
		@unlink("/var/sys/chk_snmpd");
		mybox_init_echo($_QUIET,"INFO","SNMP service disabled");
		if(!file_exists("/var/sys/init_no_restart")) do_policy_admin();
		return 0;
	}

	if(file_exists("/etc/services.lst")) {
		@copy("/etc/services.lst","/etc/services.tmp");
		mybox_append_to_file("/etc/services.tmp","snmp\t\t$_SNMP_PORT/udp\n");
		@copy("/etc/services.tmp","/etc/services");
		@unlink("/etc/services.tmp");
	}
	if($fi=fopen("/etc/snmpd.conf","w")) {
		fwrite($fi,"rocommunity $_SNMP_COMMUNITY\n");
		fwrite($fi,"sysname $_SNMP_SYSNAME\n");
		fwrite($fi,"syslocation $_SNMP_LOCATION\n");
		fwrite($fi,"syscontact $_SNMP_CONTACT\n");
		fclose($fi);
	}
	if($_QUIET==0) echo "* Writing SNMP config..\n";
	return 1;
}

function snmp_status() {
	global $_QUIET;
	$pid=mybox_get_progpid("snmpd");
	if($pid!='') {
		if($_QUIET==0) echo "* snmpd (pid $pid) is running...\n";
		return 0;
	}
	return 1;
}

function snmp_start() {
	global $_QUIET, $_ROOT_DIR;
	@unlink("/var/sys/chk_snmpd");

	if(file_exists("$_ROOT_DIR/scripts/snmp/start")) {
		return mybox_execq_cmd("$_ROOT_DIR/scripts/snmp/start");
	}
	if(file_exists("$_ROOT_DIR/scripts/snmp/pre-start")) {
		mybox_execq_cmd("$_ROOT_DIR/scripts/snmp/pre-start");
	}

	if(@snmp_config()==1 && @snmp_status()==1) {
		//if(mybox_exec_cmd("snmpd -l /dev/null -c /etc/snmpd.conf")==0) {
		$opt="-Ln";
		if(file_exists("/var/sys/log_setting/snmpd") || file_exists("/var/sys/log_setting/snmpd")) {
			$opt="-Lsd";
		}
		if(mybox_exec_cmd("snmpd $opt -c /etc/snmpd.conf")==0) {
			mybox_init_echo($_QUIET,"INFO","Starting SNMP service");
			@touch("/var/sys/chk_snmpd");
			if(!file_exists("/var/sys/init_no_restart")) do_policy_admin();
			if(file_exists("$_ROOT_DIR/scripts/snmp/post-start")) {
				mybox_execq_cmd("$_ROOT_DIR/scripts/snmp/post-start");
			}
			return 0;
		}
	}
	mybox_init_echo($_QUIET,"ERROR","Starting SNMP service failed");
	return 1;
}

function snmp_stop() {
	global $_QUIET, $_ROOT_DIR;
	@unlink("/var/sys/chk_snmpd");
	if(file_exists("$_ROOT_DIR/scripts/snmp/stop")) {
		return mybox_execq_cmd("$_ROOT_DIR/scripts/snmp/stop");
	}
	if(file_exists("$_ROOT_DIR/scripts/snmp/pre-stop")) {
		mybox_execq_cmd("$_ROOT_DIR/scripts/snmp/pre-stop");
	}
	if(mybox_killall("snmpd")==0) {
		mybox_init_echo($_QUIET,"INFO","Shutting down SNMP service");
		if(file_exists("$_ROOT_DIR/scripts/snmp/post-stop")) {
			mybox_execq_cmd("$_ROOT_DIR/scripts/snmp/post-stop");
		}
		return 0;
	}
	mybox_init_echo($_QUIET,"ERROR","Shutting down SNMP service failed");
	return 1;
}

$ret=1;
$_app=basename($_SERVER["argv"][0]);
if($_SERVER["argv"][2]=='quiet') $_QUIET=1;
switch($_SERVER["argv"][1]) {
	case 'start':
		$ret=snmp_start();
		break;
	case 'stop':
		$ret=snmp_stop();
		break;
	case 'restart':
		$ret=snmp_stop();
		sleep(2);
		$ret=snmp_start();
		break;
	case 'status':
		$ret=snmp_status();
		break;
	case 'config':
		$ret=snmp_config();
		break;
	default:
		echo "Usage: $_app [start/stop/restart/status]\n";
		break;
}
exit($ret);
?>
