#!/bin/php -Cq
<?php 
// shaper.init - last update 30-Jun-2006
if(isset($_ENV['GATEWAY_INTERFACE'])||isset($_ENV['SERVER_PROTOCOL'])) exit;
$_AWIE_CODE="ef3802a1fce98f3985e6a9a1f7c1a024";
$_SYSID="shaper";
include_once('clib.exl');
putenv("PATH=/bin:/service/tools:/service/init");

$_QUIET=0;
mybox_init_set_alarm(30);

if(!file_exists("/bin/q_show") || !file_exists("/bin/q_parser") || !file_exists("/bin/q_checkcfg") || !file_exists("/bin/tc")) {
	mybox_init_echo($_QUIET,"ERROR","Cannot execute shaper.init. Internal error!");
	exit(1);
}

function qos_chk_config($dev) {
	exec("/bin/q_checkcfg /etc/htb/$dev.conf",$out,$ret);
	if(count($out)!=0) {
		if(preg_match("/^Error/",$out[0])) return 0;
	}
	return 1;
}

function qos_get_ip($_name,$db_id) {
	$namedev_array=mybox_name2dev_array($db_id);
	if(isset($namedev_array[$_name])&&$namedev_array[$_name]!='') {
		$_ip=$namedev_array[$_name];
		if(!preg_match("/\/\d\d$/",$_ip)) {
			$_cmd_array[]="$_ip/32";
		} else {
			$_cmd_array[]="$_ip";
		}
		return $_cmd_array;
	}
	$_defnet_array=mybox_defnetwork_array($db_id);
	$_cmd_array=array();
	if(isset($_defnet_array[$_name]['name']) && $_defnet_array[$_name]['name']!='') {
		$_ip=$_defnet_array[$_name]['ip'];
		$_type=$_defnet_array[$_name]['type'];
		if($_type==2) $_ip="$_ip/32";
		$_cmd_array[]="$_ip";
	} elseif(isset($_defnet_array[$_name]['group']) && $_defnet_array[$_name]['group']!='') {
		foreach($_defnet_array[$_name] as $a => $b) {
			if(!is_array($b)) continue;
			$_ip=$b['ip'];
			$_type=$b['type'];
			if($_type==2) $_ip="$_ip/32";
			$_cmd_array[]="$_ip";
		}
	}
	return $_cmd_array;
}

function qos_get_service($_name,$db_id) {
	$_defservice_array=mybox_defservices_4qos_array($db_id);
	$_cmd_p='';
	if($_name!='any') {
		if(isset($_defservice_array[$_name]['name']) && $_defservice_array[$_name]['name']!='') {
			$_dport=$_defservice_array[$_name]['dport'];
			$_cmd_p .="$_dport ";
		} elseif(isset($_defservice_array[$_name]['group']) && $_defservice_array[$_name]['group']!='') {
			foreach($_defservice_array[$_name] as $a => $b) {
				if(!is_array($b)) continue;
				$_dport=$b['dport'];
				$_cmd_p .="$_dport ";
			}
		}
	}
	$_cmd_p=trim($_cmd_p);
	return $_cmd_p;
}

function qos_get_dev($name, $db_id) {
	$dev_array=mybox_list_namedev($db_id);
	return $dev_array[$name];
}

function qos_config() {
	global $_DB_NAME, $_QUIET;
	$db_id=mybox_db_connect($_DB_NAME);
	$qos_dev=array();
	$result=mybox_db_query("select * from htb_class where stat='1';",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_id=$row['id'];
			$_dev=trim($row['dev']);
			$_dev1=qos_get_dev($_dev, $db_id);
			if($_dev1=='') continue;
			$_bandwidth=trim($row['bandwidth']);
			$_climit=trim($row['climit']);
			$_priority=trim($row['priority']);
			$qos_dev[]="$_dev|$_dev1|$_bandwidth|$_climit|$_priority";
		}
		unset($_id,$_dev,$_dev1,$_bandwidth,$_climit,$_priority);
	}
	unset($result);
	$ret=0;
	@unlink("/etc/htb/shaper.qos");
	@unlink("/etc/htb/qos_stop");
	$lcf=array();
	if(count($qos_dev)!=0) {
		if(!is_dir("/etc/htb")) mybox_mkdirr("/etc/htb");
		foreach($qos_dev as $lx) {
			list($_dev,$_dev1,$_bandwidth,$_climit,$_priority)=preg_split("/\|/",$lx);
			@unlink("/etc/htb/$_dev1.conf");
			$fi=fopen("/etc/htb/$_dev1.conf","w");
			fwrite($fi,"class $_dev {\n");
			fwrite($fi,"\tbandwidth $_bandwidth;\n");
			fwrite($fi,"\tlimit $_climit;\n");
			fwrite($fi,"\tburst 0;\n");
			fwrite($fi,"\tpriority $_priority;\n");

			$result2=mybox_db_query("select * from htb_client where dev='$_dev' and stat='1';",$db_id);
			if(mybox_db_num_rows($result2)!=0) {
				while($row2=mybox_db_fetch_assoc($result2)) {
					$_cname=trim($row2['name']);
					$_cbandwidth=trim($row2['bandwidth']);
					$_cclimit=trim($row2['climit']);
					$_cpriority=trim($row2['priority']);
					$_csrc=trim($row2['src']);
					$_cservice=trim($row2['service']);
					$_cdst=trim($row2['dst']);
					$_src_array=array();
					$_dst_array=array();
					$_cname=preg_replace("/\s+/","_",$_cname);
					fwrite($fi,"\tclient $_cname {\n");
					fwrite($fi,"\t\tbandwidth $_cbandwidth;\n");
					fwrite($fi,"\t\tlimit $_cclimit;\n");
					fwrite($fi,"\t\tburst 0;\n");
					fwrite($fi,"\t\tpriority $_priority;\n");
					if($_cdst!='any') {
						$_dst_array=qos_get_ip($_cdst,$db_id);
						if(count($_dst_array)!=0) {
							fwrite($fi,"\t\tdst {\n");
							foreach($_dst_array as $dst) {
								if($dst=='') continue;
								$_p='';$dd='';
								$_p=qos_get_service($_cservice,$db_id);
								$dd="$dst $_p";
								$dd=trim($dd);
								fwrite($fi,"\t\t\t$dd;\n");
							}
							fwrite($fi,"\t\t};\n");
						}
						unset($_p,$dd); 
					}
					if($_csrc!='any') {
						$_src_array=qos_get_ip($_csrc,$db_id);
						if(count($_src_array)!=0) {
							fwrite($fi,"\t\tsrc {\n");
							foreach($_src_array as $src) {
								if($src=='') continue;
								$_p='';$dd='';
								$_p=qos_get_service($_cservice,$db_id);
								$dd="$src $_p";
								$dd=trim($dd);
								fwrite($fi,"\t\t\t$dd;\n");
							}
							fwrite($fi,"\t\t};\n");
						} 
						unset($_p,$dd);
					}
					fwrite($fi,"\t};\n");
				} 
			} // if db
			fwrite($fi,"};\n");
			fwrite($fi,"class default { bandwidth 8; };\n");
			fclose($fi);
			if(file_exists("/etc/htb/$_dev1.conf")) {
				if(qos_chk_config($_dev1)==1) {
					shell_exec("/bin/q_parser $_dev1 1000000 1000000 /etc/htb/$_dev1.conf |grep -v '^Error' | sed -e 's/^[ ]*echo/#echo/g' -e 's/\$TC/echo/g' > /tmp/{$_dev1}-qos && sh /tmp/{$_dev1}-qos >> /etc/htb/shaper.qos && rm -f /tmp/{$_dev1}-qos");
					$lcf[]="$_dev1";
					@touch("/etc/htb/config_done");
				}
			}
			unset($_dev,$_dev1,$_bandwidth,$_climit,$_priority);
			unset($_cname,$_cbandwidth,$_cclimit,$_cpriority,$_csrc,$_cdst,$_cservice);
		} // foreach
		unset($lx);
		if(count($lcf)!=0) {
			$ret=1;
			if($fx=fopen("/etc/htb/qos_stop","w")) {
				foreach($lcf as $lx) {
					if($lx=='') continue;
					fwrite($fx,"/bin/tc qdisc del dev $lx root\n");
					fwrite($fx,"/bin/tc qdisc del dev $lx ingress\n");
				}
				fclose($fx);unset($fx,$lx);
			}
			if($fx=fopen("/etc/htb/qos_status","w")) {
				foreach($lcf as $lx) {
					if($lx=='') continue;
					fwrite($fx,"/bin/q_show -i $lx -f /etc/htb/$lx.conf -1 -a > /etc/htb/$lx.status\n");
				}
				fclose($fx);
			}
			if(file_exists("/etc/htb/qos_stop")) chmod("/etc/htb/qos_stop",0700);
			if(file_exists("/etc/htb/qos_status")) {
				chmod("/etc/htb/qos_status",0700);
			}
			if($_QUIET==0) echo "* Writing QOS config..\n";
		} else {
			if($_QUIET==0) echo "* Writing QOS config failed.\n";
		}
	}
	mybox_db_close($db_id);
	return $ret;
}

function qos_chkstatus() {
	global $_DB_NAME, $_QUIET;
	$db_id=mybox_db_connect($_DB_NAME);
	$ok=1;
	$result=mybox_db_query("select * from htb_class where stat='1'",$db_id);
	if(mybox_db_num_rows($result)==0) $ok=0;
	mybox_db_close($db_id);
	if($ok==0) exit(1);
	return 1;
}
function qos_start() {
	global $_QUIET, $_ROOT_DIR;

	if(file_exists("$_ROOT_DIR/scripts/shaper/start")) {
		return mybox_execq_cmd("$_ROOT_DIR/scripts/shaper/start");
	}
	if(file_exists("$_ROOT_DIR/scripts/shaper/pre-start")) {
		mybox_execq_cmd("$_ROOT_DIR/scripts/shaper/pre-start");
	}

	$done=0;
	qos_stop();
	qos_chkstatus();
	if(!file_exists("/etc/htb/config_done")) {
		$done=qos_config();
	} else {
		$done=1;
	}
	if($done==1 && file_exists("/etc/htb/shaper.qos")) {
		if(mybox_exec_cmd("/bin/tc -b /etc/htb/shaper.qos")==0) {
			mybox_init_echo($_QUIET,"INFO","Applying network QOS");
			//if(!file_exists("/var/sys/init_no_restart")) {
			//	@touch("/var/sys/qos_status");
			//	mybox_echo_query("cron-restart-quiet"); 
			//}
			if(file_exists("$_ROOT_DIR/scripts/shaper/post-start")) {
				mybox_execq_cmd("$_ROOT_DIR/scripts/shaper/post-start");
			}
			return 0;
		}
	}
	mybox_init_echo($_QUIET,"ERROR","Applying network QOS failed");
	return 1;
}

function qos_stop() {
	global $_QUIET, $_ROOT_DIR;
	if(file_exists("$_ROOT_DIR/scripts/shaper/stop")) {
		return mybox_execq_cmd("$_ROOT_DIR/scripts/shaper/stop");
	}
	if(file_exists("$_ROOT_DIR/scripts/shaper/pre-stop")) {
		mybox_execq_cmd("$_ROOT_DIR/scripts/shaper/pre-stop");
	}
	mybox_unlink("/etc/htb/*.status");
	if(file_exists("/etc/htb/qos_stop")) {
		mybox_exec_cmd("sh /etc/htb/qos_stop");
		@unlink("/var/sys/qos_status");
		if(!file_exists("/var/sys/init_no_restart")) {
			mybox_echo_query("cron-restart-quiet"); 
		}
		if(file_exists("$_ROOT_DIR/scripts/shaper/post-stop")) {
			mybox_execq_cmd("$_ROOT_DIR/scripts/shaper/post-stop");
		}
	}
	return 0;
}

$_app=basename($_SERVER["argv"][0]);
if($_SERVER["argv"][2]=='quiet') $_QUIET=1;
switch($_SERVER["argv"][1]) {
	case 'start': case 'restart':
		$ret=0;
		qos_start();
		break;
	case 'stop':
		$ret=qos_stop();
		break;
	case 'config':
		$ret=qos_config();
		break;
	default:
		echo "Usage: $_app [start/stop/restart]\n";
		break;
}
exit($ret);
?>
