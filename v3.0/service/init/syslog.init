#!/bin/php -Cq
<?php 
// syslog.init - last update 11-Oct-2005
if(isset($_ENV['GATEWAY_INTERFACE'])||isset($_ENV['SERVER_PROTOCOL'])) exit;
$_AWIE_CODE="ef3802a1fce98f3985e6a9a1f7c1a024";
$_SYSID="syslog";
include_once('clib.exl');
putenv("PATH=/bin:/service/tools:/service/init");

$_QUIET=0;$_DEBUG=0;
mybox_init_set_alarm(30);
if(!file_exists("/bin/syslog-ng") || 
	!file_exists("/bin/ulogd") ||
	!file_exists("/service/tools/mfs-syslog.exc")) {
	mybox_init_echo($_QUIET,"ERROR","Cannot execute syslog.init. Internal error!");
	exit(1);
}

function syslog_config() {
	global $_DB_NAME, $_QUIET, $_DEBUG, $_PROTO;

	if(!is_dir("/var/log")) @mybox_mkdirr("/var/log");
	if(!is_dir("/var/run")) @mybox_mkdirr("/var/run");
	if(!is_dir("/var/sys/log_setting")) @mybox_mkdirr("/var/sys/log_setting");
	if(!is_dir("/var/sys/rlog_setting")) @mybox_mkdirr("/var/sys/rlog_setting");

	// update: 29/06/2006
	$logger_stat=0;
	$logger_facility=1;
	$logger_priority=5;
	$hostname="mybox.firewall.local";
	$local_logs_purge="0";
	$db_id=mybox_db_connect($_DB_NAME);
	$result=mybox_db_query("select * from misc where name like \"logger_%\"",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_name=$row['name'];
			$_val=$row['val'];
			if($_name=="logger_stat") $logger_stat=$_val;
			if($_name=="logger_facility") $logger_facility=$_val;
			if($_name=="logger_priority") $logger_priority=$_val;
			if($_name=="logger_log") $logger_log=$_val;
			if($_name=="logger_server") $logger_server=$_val;
			if($_name=="logger_port") $logger_port=$_val;
		}
	}
	unset($result);
	$result=mybox_db_query("select val from misc where name='hostname'",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		$hostname=mybox_db_fetch_single($result);
	}
	@mybox_unlink("/var/sys/rlog_setting/*");
	if($logger_stat==1) {
		$l_a=array();$l_log=array();
		if($logger_log!='') {
			$l_a=explode(",",$logger_log);
			if(count($l_a)!=0) {
				foreach($l_a as $n) {
					@touch("/var/sys/rlog_setting/$n");
				}
			}
			$_defnet_array=mybox_defnetwork_array($db_id);
			if(isset($_defnet_array[$logger_server]['name']) && $_defnet_array[$logger_server]['name']!='') {
				$_ip=$_defnet_array[$logger_server]['ip'];
			}
			$_defservice_array=mybox_defservices_array($db_id);
			if(isset($_defservice_array[$logger_port]['name']) && $_defservice_array[$logger_port]['name']!='') {
				$_port=$_defservice_array[$logger_port]['dport'];
				$_proto=$_defservice_array[$logger_port]['proto'];
				$_proto=strtolower($_PROTO[$_proto]);
			}
			if($_ip!='' && $_port!='' && $_proto!='') {
				$set="$hostname,$logger_priority,$logger_facility,$_proto,$_ip,$_port";
				mybox_save_to_file("/var/sys/logger","$set\n");
			}
		}
		unset($l_a,$n);
	}
	$_nolog=0;
	unset($result);
	$_local_logs=0;$_local_logs_purge=0;$_local_logs_log=0;
	$result=mybox_db_query("select * from misc where name like \"local_logs%\"",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			if(trim($row['name'])=='local_logs') $_local_logs=trim($row['val']);
			if(trim($row['name'])=='local_logs_purge') $_local_logs_purge=trim($row['val']);
			if(trim($row['name'])=='local_logs_log') $_local_logs_log=trim($row['val']);
		}
	}
	@mybox_unlink("/var/sys/log_setting/*");


	if($_local_logs==0) {
		@touch("/var/sys/nolog");
	} else {
		if($_local_logs_purge!='' || $_local_logs_purge!=0) {
			@mybox_save_to_file("/var/sys/local_logs_purge","$_local_logs_purge\n");
		}
		$l_a=array();$l_log=array();
		if($_local_logs_log!='') {
			$l_a=explode(",",$_local_logs_log);
			if(count($l_a)!=0) {
				foreach($l_a as $n) {
					@touch("/var/sys/log_setting/$n");
				}
			}
		}
	}
	mybox_db_close($db_id);

	@touch("/var/log/squid.access");
	@touch("/var/log/squid.cache");
	@touch("/var/log/https.log");

	$_config='';
	$_config .="options {\n";
	$_config .="	sync(0);\n";
	$_config .="	time_reopen(10);\n";
	$_config .="	log_fifo_size(1000);\n";
	$_config .="	long_hostnames(off);\n";
	$_config .=" 	use_dns(no);\n";
	$_config .="	use_fqdn(no);\n";
	$_config .="	create_dirs(no);\n";
	$_config .="	keep_hostname(yes);\n";
	$_config .="};\n";

	$_config .="source s_sys {\n";
	$_config .="	file(\"/proc/kmsg\" log_prefix(\"kernel: \"));\n";
	$_config .="	unix-stream(\"/dev/log\");\n";
	$_config .="	internal();\n";
	$_config .="};\n";

	$_config .="destination d_syslog { program(\"/service/tools/mfs-syslog.exc sys\" template(\"\$MONTH/\$DAY/\$YEAR \$HOUR:\$MIN:\$SEC,\$PROGRAM,\$PID,\$MSGONLY\\n\") template_escape(no)); };\n";
	$_config .="log { source(s_sys); destination(d_syslog); };\n";

	if(file_exists("/var/sys/log_setting/httpproxy_access")) {
		$_config .="source s_squid_access {\n";
		$_config .="	file(\"/var/log/squid.access\" follow_freq(1) flags(no-parse));\n";
		$_config .="};\n";
		$_config .="destination d_squid_access { program(\"/service/tools/mfs-syslog.exc cf\" template(\"\$MSG\\n\") template_escape(no)); };\n";
		$_config .="log { source(s_squid_access); destination(d_squid_access); };\n";
	}

	if(file_exists("/var/sys/log_setting/httpproxy_cache") ||
			file_exists("/var/sys/log_setting/httpproxy_contentremoval") ||
			file_exists("/var/sys/log_setting/httpproxy_siteredirection") ) {
		$_config .="source s_squid_cache {\n";
		$_config .="	file(\"/var/log/squid.cache\" follow_freq(1) flags(no-parse));\n";
		$_config .="};\n";
		$_config .="destination d_squid_cache { program(\"/service/tools/mfs-syslog.exc cfc\" template(\"\$MSG\\n\") template_escape(no)); };\n";
		$_config .="log { source(s_squid_cache); destination(d_squid_cache); };\n";
	}

	if(file_exists("/var/sys/log_setting/httpsd")) {
		$_config .="source s_https_log {\n";
		$_config .="	file(\"/var/log/https.log\" follow_freq(1) flags(no-parse));\n";
		$_config .="};\n";
		$_config .="destination d_https_log { program(\"/service/tools/mfs-syslog.exc https\" template(\"\$MSG\\n\") template_escape(no)); };\n";
		$_config .="log { source(s_https_log); destination(d_https_log); };\n";
	}
	if($_DEBUG==1) {
		$_config .="destination d_debug { file(\"/var/log/debug\" template(\"\$MONTH/\$DAY/\$YEAR \$HOUR:\$MIN:\$SEC,\$PROGRAM,\$PID,\$MSGONLY\\n\") template_escape(no)); };\n";
		$_config .="log { source(s_sys); destination(d_debug); };\n";
	}

	mybox_mkdirr("/etc/syslog-ng");
	mybox_save_to_file("/etc/syslog-ng/syslog-ng.conf",$_config);

	$_rmem=1048576;
	$_bufsize=4194304;

	if(file_exists("/proc/sys/net/core/rmem_max")) {
		$_rmem=mybox_fget_contents("/proc/sys/net/core/rmem_max");
		$_bufsize=$_rmem * 4;
	}
	$_config='';
	$_config .="[global]\n";
	$_config .="logfile=\"syslog\"\n";
	$_config .="loglevel=7\n";
	$_config .="rmem=$_rmem\n";
	$_config .="bufsize=$_bufsize\n";
	$_config .="plugin=\"/lib/ulogd_inpflow_NFCT.so\"\n";
	$_config .="plugin=\"/lib/ulogd_inppkt_NFLOG.so\"\n";
	$_config .="plugin=\"/lib/ulogd_raw2packet_BASE.so\"\n";
	$_config .="plugin=\"/lib/ulogd_filter_IFINDEX.so\"\n";
	$_config .="plugin=\"/lib/ulogd_output_SYSLOG.so\"\n";
	$_config .="stack=log1:NFLOG,base1:BASE,ifi1:IFINDEX,sys1:SYSLOG\n";
	$_config .="[log1]\n";
	$_config .="unbind=1\n";
	$_config .="group=0\n";
	$_config .="[sys1]\n";
	$_config .="facility=LOG_KERN\n";
	$_config .="level=LOG_INFO\n";
	mybox_save_to_file("/etc/ulogd.conf",$_config);

	//if($_QUIET==0) echo "* Writing syslog config..\n";
	return 1;
}

function syslog_status() {
	global $_QUIET;
	$pid1=mybox_get_progpid("syslog-ng");
	$pid2=mybox_get_progpid("ulogd");
	if($pid1!='' || $pid2!='') {
		if($_QUIET==0) {
			if($pid1!='') echo "* syslog-ng (pid $pid1) is running...\n";
			if($pid2!='') echo "* ulogd (pid $pid3) is running...\n";
		}
		return 0;
	}
	return 1;
}

function syslog_start() {
	global  $_QUIET, $_ROOT_DIR;

	if(file_exists("$_ROOT_DIR/scripts/syslog/start")) {
		return mybox_execq_cmd("$_ROOT_DIR/scripts/syslog/start");
	}
	if(file_exists("$_ROOT_DIR/scripts/syslog/pre-start")) {
		mybox_execq_cmd("$_ROOT_DIR/scripts/syslog/pre-start");
	}

	mybox_ips_cnt(2);
	mybox_pscan_cnt(2);
	if(@syslog_config()==1 && @syslog_status()==1) {
                if(mybox_exec_cmd("syslog-ng")==0) {
			mybox_init_echo($_QUIET,"INFO","Starting System Logger service");
                }
                if(mybox_exec_cmd("ulogd -d")==0) {
			mybox_init_echo($_QUIET,"INFO","Starting Packet Filter Logger service");
                }
		@touch("/var/sys/chk_syslog-ng");
		@touch("/var/sys/syslog_no_restart");
		if(!file_exists("/var/sys/init_no_restart")) {
			if(file_exists("/var/sys/chk_xinetd")) mybox_echo_query("xinet-reload-quiet");
			if(file_exists("/var/sys/chk_ntpd")) mybox_echo_query("ntp-restart-quiet");
			if(file_exists("/var/sys/chk_snmpd")) mybox_echo_query("snmp-restart-quiet");
			if(file_exists("/var/sys/chk_crond")) mybox_echo_query("cron-restart-quiet");
			if(file_exists("/var/sys/chk_squid")) mybox_echo_query("http_proxy-restart-quiet");
		}
		@unlink("/var/sys/syslog_no_restart");
		if(file_exists("$_ROOT_DIR/scripts/syslog/post-start")) {
			mybox_execq_cmd("$_ROOT_DIR/scripts/syslog/post-start");
		}
		return 0;
	} 
	@touch("/var/sys/chk_syslog-ng");
	mybox_init_echo($_QUIET,"ERROR","Starting syslog service failed");
	return 1;
}

function syslog_stop() {
	global $_QUIET, $_ROOT_DIR;
	@unlink("/var/sys/chk_syslog-ng");
	@unlink("/var/sys/logger");
	@unlink("/etc/syslog-ng/syslog-ng.conf");
	@unlink("/var/sys/nolog");
	@unlink("/var/log/debug");

	if(file_exists("$_ROOT_DIR/scripts/syslog/stop")) {
		return mybox_execq_cmd("$_ROOT_DIR/scripts/syslog/stop");
	}
	if(file_exists("$_ROOT_DIR/scripts/syslog/pre-stop")) {
		mybox_execq_cmd("$_ROOT_DIR/scripts/syslog/pre-stop");
	}

	mybox_ips_cnt(2);
	mybox_pscan_cnt(2);

        if(mybox_killall("syslog-ng")==0) {
		mybox_init_echo($_QUIET,"INFO","Shutting down System Logger service");
        } else {
		mybox_init_echo($_QUIET,"ERROR","Shutting down System Logger service failed");
        }

        if(mybox_killall("ulogd")==0) {
		mybox_init_echo($_QUIET,"INFO","Shutting down Packet Filter Logger service");
        } else {
		mybox_init_echo($_QUIET,"ERROR","Shutting down Packet Filter Logger service failed");
        }
	mybox_init_echo($_QUIET,"INFO","Shutting down mfs-syslog.exc service");
	@mybox_killall("mfs-syslog.exc");

	if(file_exists("$_ROOT_DIR/scripts/syslog/post-stop")) {
		mybox_execq_cmd("$_ROOT_DIR/scripts/syslog/post-stop");
	}
	return 0;
}

$ret=1;
$_app=basename($_SERVER["argv"][0]);
if($_SERVER["argv"][2]=='quiet') $_QUIET=1;
if($_SERVER["argv"][2]=='debug') $_DEBUG=1;
switch($_SERVER["argv"][1]) {
	case 'start':
		$ret=syslog_start();
		break;
	case 'stop':
		$ret=syslog_stop();
		break;
	case 'restart':
		$ret=syslog_stop();
		sleep(2);
		$ret=syslog_start();
		break;
	case 'status':
		$ret=syslog_status();
		break;
	case 'config':
		$ret=syslog_config();
		break;
	default:
		echo "Usage: $_app [start/stop/restart/status]\n";
		break;
}
exit($ret);
?>
