<?php 
if($_AWIE_CODE!="ef3802a1fce98f3985e6a9a1f7c1a024") exit("\n\n<---[ closed. not parent ]--->\n\n");
// updated: 21/05/2007

function mybox_binnmtowm($binin){
	$binin=rtrim($binin, "0");
	if(!ereg("0",$binin) ){
		return str_pad(str_replace("1","0",$binin), 32, "1");
	} else {
		return "1010101010101010101010101010101010101010";
	}
}

function mybox_bintocdr($binin){
	return strlen(rtrim($binin,"0"));
}

function mybox_bintodq($binin) {
	if ($binin=="N/A") return $binin;
	$binin=explode(".", chunk_split($binin,8,"."));
	for ($i=0; $i<4 ; $i++) {
		$dq[$i]=bindec($binin[$i]);
	}
        return implode(".",$dq) ;
}

function mybox_binwmtonm($binin){
	$binin=rtrim($binin, "1");
	if (!ereg("1",$binin)){
		return str_pad(str_replace("0","1",$binin), 32, "0");
	} else return "1010101010101010101010101010101010101010";
}

function mybox_cdrtobin($cdrin){
	return str_pad(str_pad("", $cdrin, "1"), 32, "0");
}

function mybox_dqtobin($dqin) {
        $dq = explode(".",$dqin);
        for ($i=0; $i<4 ; $i++) {
           $bin[$i]=str_pad(decbin($dq[$i]), 8, "0", STR_PAD_LEFT);
        }
        return implode("",$bin);
}

function mybox_check_ipv4($ip) {
	// 0 = false; 1 = true;
	if(preg_match('/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$/',$ip)) {
		if(!ereg('^0.',$ip)) {
			foreach(explode(".",$ip) as $octet ){
 				if($octet > 255){ 
					return 0;
				}
			}
		}
		return 1;
	}
	return 0;
}

// 23-Nov-2006
function mybox_check_mac($mac) {
	if(strlen($mac)!=17) return false;
	return preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$mac);
}

function mybox_ipcalc($ip,$nmask='255.255.255.0') {
	if(!mybox_check_ipv4($ip)) return array();
	$dq_host=$ip;
	$ret=array();
	if(preg_match("/^[0-9]{1,2}$/",$nmask)) {
		if(!($nmask >= 0 && $nmask <= 32)) return $ret;
		$bin_nmask=mybox_cdrtobin($nmask);
		$bin_wmask=mybox_binnmtowm($bin_nmask);
		$cdr_nmask=$nmask;
		$_prefix=$nmask;
	} elseif(preg_match('/^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$/',$nmask)) {
		$bin_nmask=mybox_dqtobin($nmask);
		$bin_wmask=mybox_binnmtowm($bin_nmask);
		if(ereg("0",rtrim($bin_nmask, "0"))) {
			$bin_wmask=mybox_dqtobin($nmask);
			$bin_nmask=mybox_binwmtonm($bin_wmask);
			if(ereg("0",rtrim($bin_nmask, "0"))) {
				return $ret;
			}
		}
		$cdr_nmask=mybox_bintocdr($bin_nmask);
		$_prefix=$cdr_nmask;
	} else {
		return $ret;
	}
	$bin_host=mybox_dqtobin($dq_host);
	$bin_bcast=(str_pad(substr($bin_host,0,$cdr_nmask),32,1));
	$bin_net=(str_pad(substr($bin_host,0,$cdr_nmask),32,0));
	$bin_first=(str_pad(substr($bin_net,0,31),32,1));
	$bin_last=(str_pad(substr($bin_bcast,0,31),32,0));
	$host_total=(bindec(str_pad("",(32-$cdr_nmask),1)) - 1);
	if($host_total <= 0) {
		$bin_first="N/A" ; $bin_last="N/A" ; $host_total="N/A";
		if ($bin_net === $bin_bcast) $bin_bcast="N/A";
	}
	if(ereg('^(00001010)|(101011000001)|(1100000010101000)',$bin_net)) {
		$_type='Private';
	} else {
		$_type='Public';
	}
	$_ipaddr=$dq_host;
	$_netmask=mybox_bintodq($bin_nmask);
	$_wildcard=mybox_bintodq($bin_wmask);
	$_network=mybox_bintodq($bin_net);
	$_broadcast=mybox_bintodq($bin_bcast);
	$_hostmin=mybox_bintodq($bin_first);
	$_hostmax=mybox_bintodq($bin_last);
	$_hostnet=$host_total;
	
	$ret['ip']=$_ipaddr;
	$ret['netmask']=$_netmask;
	$ret['wildcard']=$_wildcard;
	$ret['network']=$_network;
	$ret['broadcast']=$_broadcast;
	$ret['hostmin']=$_hostmin;
	$ret['hostmax']=$_hostmax;
	$ret['total']=$_hostnet;
	$ret['prefix']=$_prefix;
	$ret['type']=$_type;
	return $ret;
}

// 9/8/07; return true if same network
function mybox_is_same_net($ip,$nm,$m) {
        $ret=mybox_ipcalc($ip,$nm);
        if(count($ret)==0) return 0;
        $r1=sprintf("%u",ip2long($ret['hostmin']));
        $r2=sprintf("%u",ip2long($ret['hostmax']));
        $ip=sprintf("%u",ip2long($m));
        if($ip <= 0 || $r1 <= 0 || $r2 <= 0) return 0;
        if($ip >= $r1 && $ip <= $r2) return 1;
        return 0;
}

function mybox_isip_alive($dev,$ip) {
	exec("arping -c 2 -w 3 -D -I $dev $ip",$out,$ret);
	//exec("arping -f -c 2 -w 3 -D -i $dev $ip",$out,$ret);
	foreach($out as $list) {
        	if(preg_match("/Received\s(\d+)/",$list,$mm)) {
                	if($mm[1]==0) return 0;
        	}
	}
	return 1;
}

function mybox_isip_exists($ip) {
	exec("arping -f -c 1 -w 1 -D $ip",$out,$ret);
	foreach($out as $list) {
        	if(preg_match("/Received\s(\d+)/",$list,$mm)) {
                	if($mm[1]==0) return 0;
        	}
	}
	return 1;
}

function mybox_chkconnect($proto,$ip,$port,$timeout) {
        $ret=1;
        $fp=@fsockopen("$proto://$ip", $port, $errno, $errstr, $timeout);
       	if(!$fp) $ret=0;
        @fclose($fp);
        return $ret;
}

function mybox_set_smb_acl($db_id,$ip) {
	$result=mybox_db_query("select ip,prefix,dev from ipaddr where onboot='1'",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_ip=$row['ip'];
			$_prefix=$row['prefix'];
			$_dev=$row['dev'];
			if(mybox_is_same_net($_ip,$_prefix,$ip)==1) return "$_dev";
			unset($_ret,$_ip,$_prefix,$_dev);
		}
	}
	return null;
}

function mybox_list_devname($db_id,$opt=0) {
	$_dd=array();
	if($opt!=0) {
		$result=mybox_db_query("select name,dev,type from ipaddr where type='$opt'",$db_id);
	} else {
		$result=mybox_db_query("select name,dev from ipaddr",$db_id);
	}
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_name=$row['name'];
			$_dev=$row['dev'];
			$_dd[$_dev]=$_name;
		}
	}
	return $_dd;
}
// 19/09/2006
/* return array;
Array
(
    [streamyx1] => eth0
    [DMZ] => eth1
    [LAN] => eth2
)
*/
function mybox_list_namedev($db_id='') {
	global $_DB_NAME;
	if(file_exists("/var/sys/list_namedev.cache")) {
		return unserialize(mybox_fget_contents("/var/sys/list_namedev.cache"));
	}
	$close_db=0;
	if($db_id=='') {
		$db_id=mybox_db_connect($_DB_NAME);
		$close_db=1;
	}
	$_dd=array();
	$result=mybox_db_query("select name,dev from ipaddr",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_name=$row['name'];
			$_dev=$row['dev'];
			$_dd[$_name]=$_dev;
		}
	}
	unset($result);
	$result=mybox_db_query("select name,dev from ipalias",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		$x=0;
		while($row=mybox_db_fetch_assoc($result)) {
			$_name=$row['name'];
			$_dev=$row['dev'];
			$_dd[$_name]="{$_dev}:$x";
			$x++;
		}
	}
	unset($result);
	$result=mybox_db_query("select name,dev from vlan",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		$x=0;
		while($row=mybox_db_fetch_assoc($result)) {
			$_name=$row['name'];
			$_dev=$row['dev'];
			$_dd[$_name]="{$_dev}.$x";
			$x++;
		}
	}
	if($close_db==1) mybox_db_close($db_id);
	if(count($_dd)!=0) file_put_contents("/var/sys/list_namedev.cache",serialize($_dd));
	return $_dd;
}

function mybox_search_devname($table,$db_id) {
	$_ret='';
	$result=mybox_db_query("select dev from $table",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		$_ret=mybox_db_fetch_single($result);
	}
	return $_ret;
}
// 27/05/2006: dnet arp show
// update: 20/11/2006: arp -n
function mybox_arp_flush() {
	if($fi=popen("arp -n","r")) {
		while($buff=fgets($fi,1024)) {
			$buff=trim($buff);
			if($buff=='') continue;
			if(preg_match("/^Address/",$buff)) continue;
			if(preg_match("/\(incomplete\)/",$buff)) continue;
			list($addr,$hw)=preg_split("/\s+/",$buff);
			$addr=trim($addr);
			if($addr!='') {
				mybox_exec_cmd("arp -d $addr");
			}
			unset($addr,$hw);
		}
		pclose($fi);
		@mybox_staticarp();
	}
}
// 03/06/2006
function mybox_if_dev_up_array() {
	$_int=array();
	$ipconfig=mybox_get_ipconfig_cache();
	if(count($ipconfig)!=0) {
		foreach($ipconfig as $eth => $val) {
			if(!preg_match("/^eth(\d+)$/",$eth)) continue;
			$dev1=trim($eth);
			$_int[$dev1]=1;
		}
		return $_int;
	}
}

// 19/09/2006
function mybox_if_vip_up_array() {
	$_int=array();
	$ipconfig=mybox_get_ipconfig_cache();
	if(count($ipconfig)!=0) {
		foreach($ipconfig as $eth => $val) {
			if(!preg_match("/^eth(\d+)\:(\S+)$/",$eth)) continue;
			$dev=trim($eth);
			$_int[$dev]=1;
		}
		return $_int;
	}
}

// 28/09/2006
// update: 20/11/2006
function mybox_if_vlan_up_array() {
	$_int=array();
	$ipconfig=mybox_get_ipconfig_cache();
	if(count($ipconfig)!=0) {
		foreach($ipconfig as $eth => $val) {
			if(!preg_match("/^eth(\d+)\.(\S+)$/",$eth)) continue;
			$dev=trim($eth);
			$_int[$dev]=1;
		}
		return $_int;
	}
}

// 14/11/2006
// update: 20/11/2006
//	   27/09/2007 - busybox 1.7.x
function mybox_get_arp_ip_mac($dev,$ip) {
        //exec("arping -f -c 2 -w 3 -i $dev $ip",$out,$ret);
        exec("arping -f -c 2 -w 3 -I $dev $ip",$out,$ret);
        $mac='';
        if($ret==0) {
                if(count($out)!=0) {
                        foreach($out as $lx) {
                                $lx=trim($lx);
                                if(preg_match("/\s+$ip\s+\[(\S+\:\S+\:\S+\:\S+\:\S+\:\S+)\]/",$lx,$mm)) {
					if(mybox_check_mac($mm[1])) $mac=$mm[1];
                                        break;
                                }
                        }
                }
        }
        return $mac;
}
// 14/11/2006
// updated: 21/05/2007
/*
mybox_get_ipconfig_cache():
Array
(
    [eth0] => 00:0B:AB:0F:25:9B,219.94.106.174,219.94.106.255,255.255.255.0
    [eth1] => 00:0B:AB:0F:25:9C,192.168.3.1,192.168.3.255,255.255.255.0
    [eth1:0] => 00:0B:AB:0F:25:9C,192.168.3.10,192.168.3.255,255.255.255.0
    [eth1.2:awie] => 00:0B:AB:0F:25:9C,192.168.3.11,192.168.3.255,255.255.255.0
    [eth2] => 00:0B:AB:0F:25:9D,192.168.0.1,192.168.0.255,255.255.255.0
)
*/
function mybox_get_ipconfig_cache() {
	$ret=1;$_mac=array();
	if(!file_exists("/var/sys/ipconfig.cache")) @shell_exec("ifconfig > /var/sys/ipconfig.cache");
	if(file_exists("/var/sys/ipconfig.cache")) {
		$out=file("/var/sys/ipconfig.cache");
		$ret=0;
	} else {
		exec("ifconfig",$out,$ret);
	}
	if($ret==0) {
		if(count($out)!=0) {
			foreach($out as $lx) {
				if(preg_match("/^(eth\S+)\s+Link\s+encap\:Ethernet\s+HWaddr\s+(\S+\:\S+\:\S+\:\S+\:\S+\:\S+)/",$lx,$mm)) {
					$tag=$mm[1];
					if($_mac[$tag]=='') $_mac[$tag] .="{$mm[2]},";
				} else if(preg_match("/\s+inet\s+addr\:(\d+\.\d+\.\d+\.\d+)\s+Bcast\:(\d+\.\d+\.\d+\.\d+)\s+Mask\:(\d+\.\d+\.\d+\.\d+)/",$lx,$mm1)) {
					$_mac[$tag] .="{$mm1[1]},{$mm1[2]},{$mm1[3]}";
				} else {
					continue;
				}
			}
		}
		return $_mac;
	}
	return $_mac;
}

// 20/11/2006
function mybox_get_routen_cache() {
	$ret=1;$_route=array();
	if(!file_exists("/var/sys/routen.cache")) @shell_exec("route -n > /var/sys/routen.cache");
	if(file_exists("/var/sys/routen.cache")) {
		$out=file("/var/sys/routen.cache");
		$ret=0;
	} else {
		exec("route -n",$out,$ret);
	}
	if($ret==0) {
		if(count($out)!=0) {
			foreach($out as $lx) {
				$lx=trim($lx);
				if($lx=='') continue;
				if(preg_match("/^(Kernel|Destination)/",$lx)) continue;
				list($destination,$gateway,$genmask,$flags,$metric,$ref,$use,$iface)=preg_split('/\s+/',$lx);
				$_route[]="$flags|$gateway|$iface|$destination|$genmask|$metric|$ref|$use";
			}
		}
		return $_route;
	}
	return $_route;
}

function mybox_staticarp() {
	global $_DB_NAME;
	// re-flush static ARP cache
	if($fi=popen("arp -n","r")) {
		while($buff=fgets($fi,1024)) {
			$buff=trim($buff);
			if($buff=='') continue;
			if(preg_match("/^Address/",$buff)) continue;
			if(preg_match("/\(incomplete\)/",$buff)) continue;
			list($addr,$hw,$mac,$flag,$dev)=preg_split("/\s+/",$buff);
			$addr=trim($addr);
			if($addr!='' && $flag=="CM") {
				mybox_exec_cmd("arp -d $addr");
			}
			unset($addr,$hw,$mac,$flag,$dev);
		}
		pclose($fi);
	}

        $ipconfig=mybox_get_ipconfig_cache();
        if(count($ipconfig)!=0) {
                foreach($ipconfig as $eth => $val) {
			if(!preg_match("/^eth(\d+)$/",$eth)) continue;
                        list($mac,$ip,$bcast,$mask)=preg_split("/,/",$val);
                        if($ip!='' && $mac!='' && mybox_check_mac($mac)) {
				mybox_exec_cmd("arp -s $ip $mac -i $eth");
			}
                }
        } 
	$routen=mybox_get_routen_cache();
	if(count($routen)!=0) {
		foreach($routen as $lx) {
			if($lx=='') continue;
			$_mac='';
			list($flags,$gateway,$iface,$destination,$genmask,$metric,$ref,$use)=preg_split('/\|/',$lx);
			if($flags=="UG") {
				$_mac=mybox_get_arp_ip_mac($iface,$gateway);
				if($_mac!='' && mybox_check_mac($_mac)) {
					mybox_exec_cmd("arp -s $gateway $_mac -i $iface");
				}
			}
		}
	}
	if(file_exists("/var/sys/dhcp.cache")) {
		$buff=file("/var/sys/dhcp.cache");
		if(count($buff)!=0) {
			foreach($buff as $ln) {
				$ln=trim($ln);
				if($ln=='') continue;
				list($ip,$mac,$dev)=preg_split("/\|/",$ln);
				if($ip!='' && $mac!='' && $dev!='' && mybox_check_mac($mac)) {
					mybox_exec_cmd("arp -s $ip $mac -i $dev");
				}
			}
		}
	}
	$db_id=mybox_db_connect($_DB_NAME);
	$result=mybox_db_query("select ip,mac,stat from static_arp where stat='1'",$db_id);
	if(@mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_ip=$row['ip'];
			$_mac=strtoupper($row['mac']);
			if($_ip!='' && $_mac!='' && mybox_check_mac($_mac)) {
				mybox_exec_cmd("arp -s $_ip $_mac");
			}
		}
	}
}

// 29-Nov-2006
function mybox_get_dhcp_lease() {
	$leases=array();$data=array();
	if($fp=@fopen("/var/state/dhcp/dhcpd.leases","r")) {
		$return=array();
		while($line=fgets($fp))	{
			$matches=array();
			if(preg_match("/^\s*[\r|\n]/", $line, $matches[0]) ||
				preg_match("/^([^\"#]*)#.*$/", $line, $matches[1]) ||
				preg_match("/^([^\"]*)\/\/.*$/", $line, $matches[2]) ||
				preg_match("/\s*#(.*)/", $line, $matches[3]) ||
				preg_match("/\\\"\176/", $line, $matches[4]) ) {
				$line="";
				continue;
			}

			if(preg_match("/(.*)#(.*)/", $line, $matches)) $line=$matches[0];
			do {
				if(preg_match("/^\s*\"([^\"]*)\"(.*)$/", $line, $matches)) {
					$line=$matches[2];
					$return[]=array($matches[1], 0);
				} else if(preg_match("/^\s*([{};])(.*)$/", $line, $matches)) {
					$line=$matches[2];
					$return[]=array($matches[0], 1);
				} else if(preg_match("/^\s*([^{}; \t]+)(.*)$/", $line, $matches)) {
					$line=$matches[2];
					$return[]=array($matches[1], 0);
				} else {
					break;
				}
			} while($line);
			$lines++;
		}
		fclose($fp);
		if(count($return)==0) return array();
		$i=0;
		while($data=array_shift($return)) {
			if($data[0]=="next") $d=array_shift($return);
			if($data[0]=="lease") {
				$d=array_shift($return);
				$leases[$i]['ip']=$d[0];
				$leases[$i]['dev']=mybox_get_ip_match_name($d[0]);
			}
			if($data[0]=="client-hostname") {
				$d=array_shift($return);
				$leases[$i]['hostname']=$d[0];
			}
			if($data[0]=="hardware") {
				$d=array_shift($return);
				if($d[0]=="ethernet") {
					$d=array_shift($return);
					$leases[$i]['mac']=$d[0];
				}
			} else if($data[0]=="starts") {
				$d=array_shift($return);
				$d=array_shift($return);
				$leases[$i]['start']=$d[0];
				$d=array_shift($return);
				$leases[$i]['start'] .= " " . $d[0];
			} else if($data[0]=="ends") {
				$d=array_shift($return);
				$d=array_shift($return);
				$leases[$i]['end']=$d[0];
				$d=array_shift($return);
				$leases[$i]['end'] .= " " . $d[0];
			} else if($data[0]=="binding") {
				$d=array_shift($return);
				if($d[0]=="state") {
					$d=array_shift($return);
					$leases[$i]['act']=$d[0];
				}
			} else if(($data[0]=="}")&&($data[1]==1)) {
				$i++;
			}
		}
	}
	return array_reverse($leases);
}

function mybox_daemon() {
	$pid=pcntl_fork();
	if($pid==-1) {
		mybox_slog("ERROR","function mybox_daemon(): daemonized failed.");
		return 0;
	} else if($pid) {
		exit;
	} else {
		return 1;
	}
	return 0;
}

// search IP device name
function mybox_get_ip_match_name($ip,$db_id='') {
	$list_namedev=mybox_list_namedev($db_id);
	if(count($list_namedev)==0) return;
	$_dev=array();
	foreach($list_namedev as $n => $e) {
		$_dev[$e]="$n";
	}
	unset($e,$n);
	$ipconfig=mybox_get_ipconfig_cache();
	if(count($ipconfig)==0) return;
	foreach($ipconfig as $eth => $val) {
		if($val=='') continue;
		list($mac,$mip,$mbc,$mn)=preg_split("/,/",$val);
		if(mybox_is_same_net($mip,$mn,$ip)) return $_dev[$eth];
		unset($mnn,$mac,$mip,$mbc,$mn);
	}
	return;
}

// 10/8/2007: match my ip
function mybox_get_ip_match_me($ip) {
	$ipconfig=mybox_get_ipconfig_cache();
	if(count($ipconfig)==0) return;
	foreach($ipconfig as $eth => $val) {
		if($val=='') continue;
		list($mac,$mip,$mbc,$mn)=preg_split("/,/",$val);
		if($mip=="$ip") return 1;
		unset($mnn,$mac,$mip,$mbc,$mn);
	}
	return 0;
}

// search IP device name
function mybox_is_myipmac($ip,$mac) {
	$_ism=array();
	if(file_exists("/var/sys/myipmac.cache")) {
		$_ism=unserialize(mybox_fget_contents("/var/sys/myipmac.cache"));
		if(isset($_ism[$ip][$mac])&&$_ism[$ip][$mac]==1) return 1;
		return 0;
	}
	$ipconfig=mybox_get_ipconfig_cache();
	if(count($ipconfig)==0) return;
	foreach($ipconfig as $eth => $val) {
		if($val=='') continue;
		list($mac,$mip,$mbc,$mn)=preg_split("/,/",$val);
		$_ism[$mip][$mac]=1;
		unset($mnn,$ret,$val);
	}
	if(count($_ism)!=0) {
		mybox_save_to_file("/var/sys/myipmac.cache",serialize($_ism));
		if(isset($_ism[$ip][$mac])&&$_ism[$ip][$mac]==1) return 1;
	}
	return 0;
}

// set local ip for ip2country lookup
function mybox_set_cipname_file($db_id='') {
	global $_DB_NAME;
	if(file_exists("/var/sys/cipname.cache")) {
		clearstatcache();
		return;
	}
	$close_db=0;
	if($db_id=='') {
		$db_id=mybox_db_connect($_DB_NAME);
		$close_db=1;
	}
	$txt='';
	$result=mybox_db_query("select name,ip from defnetworks where type='2'",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_name=$row['name'];
			$_ip=$row['ip'];
			$r1=sprintf("%u",ip2long($_ip));
			$txt .="\"$r1\",\"$r1\",\"DEF\",\"DEF\",\"$_name\"\n";
		}
	}
	unset($result);

	$result=mybox_db_query("select name,ip,prefix from ipaddr",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_name=$row['name'];
			$_ip=$row['ip'];
			$_prefix=$row['prefix'];
			$ret=array();$r1='';$r2='';
        		$ret=mybox_ipcalc($_ip,$_prefix);
        		if(count($ret)==0) continue;
			$r0=sprintf("%u",ip2long($_ip));
        		$r1=sprintf("%u",ip2long($ret['hostmin']));
        		$r2=sprintf("%u",ip2long($ret['hostmax']));
			$txt .="\"$r0\",\"$r0\",\"LOCAL\",\"LOCAL\",\"$_name\"\n";
			$txt .="\"$r1\",\"$r2\",\"LOCALNET\",\"LOCALNET\",\"$_name (Network)\"\n";
		}
	}
	unset($ret,$r0,$r1,$r2,$_name,$_ip,$_prefix);

	$result=mybox_db_query("select name,ip,prefix from ipalias",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_name=$row['name'];
			$_ip=$row['ip'];
			$_prefix=$row['prefix'];
			$ret=array();$r1='';$r2='';
        		$ret=mybox_ipcalc($_ip,$_prefix);
        		if(count($ret)==0) continue;
			$r0=sprintf("%u",ip2long($_ip));
        		$r1=sprintf("%u",ip2long($ret['hostmin']));
        		$r2=sprintf("%u",ip2long($ret['hostmax']));
			$txt .="\"$r0\",\"$r0\",\"LOCAL\",\"LOCAL\",\"$_name\"\n";
			$txt .="\"$r1\",\"$r2\",\"LOCALNET\",\"LOCALNET\",\"$_name (Network)\"\n";
		}
	}
	unset($ret,$r0,$r1,$r2,$_name,$_ip,$_prefix);

	$result=mybox_db_query("select name,ip,prefix from vlan",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_name=$row['name'];
			$_ip=$row['ip'];
			$_prefix=$row['prefix'];
			$ret=array();$r1='';$r2='';
        		$ret=mybox_ipcalc($_ip,$_prefix);
        		if(count($ret)==0) continue;
			$r0=sprintf("%u",ip2long($_ip));
        		$r1=sprintf("%u",ip2long($ret['hostmin']));
        		$r2=sprintf("%u",ip2long($ret['hostmax']));
			$txt .="\"$r0\",\"$r0\",\"LOCAL\",\"LOCAL\",\"$_name\"\n";
			$txt .="\"$r1\",\"$r2\",\"LOCALNET\",\"LOCALNET\",\"$_name (Network)\"\n";
		}
	}
	unset($ret,$r0,$r1,$r2,$_name,$_ip,$_prefix);
	mybox_save_to_file("/var/sys/cipname.cache","$txt");
	if($close_db==1) {
		mybox_close_db($db_id);
	}
}


function mybox_nic_chklink(&$info,$dev) {
	exec("/bin/ethtool $dev",$out,$ret);
	if($ret!=0) $ret=-1;
	if(count($out)!=0) {
		foreach($out as $ln){
			//$ln=trim($ln);
			if($ln=='') continue;
			if(stripos($ln,"Link detected: yes")!==FALSE) $ret=1;
			$ln=preg_replace("/\t/","&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;",$ln);
			$ln=preg_replace("/\s/","&nbsp;",$ln);
			$info .="$ln<br>";
		}
		if($info!='') $info="<table border=0 cellpadding=1 cellspacing=1 bgcolor=#dddddd><tr><td><b>$info</b></td></tr></table>";
	}
	return $ret;
}

function get_dev_traffic() {
	if($fd=fopen('/proc/net/dev', 'r')) {
		while($buf = fgets($fd, 4096)) {
        		if(preg_match('/:/', $buf)) {
          			list($dev_name, $stats_list)=preg_split('/:/', $buf, 2);
          			$stats=preg_split('/\s+/',trim($stats_list));
				$dev_name=trim($dev_name);
          			$results[$dev_name]=array();

          			$results[$dev_name]['rx_bytes'] = $stats[0];
          			$results[$dev_name]['rx_packets'] = $stats[1];
          			$results[$dev_name]['rx_errs'] = $stats[2];
          			$results[$dev_name]['rx_drop'] = $stats[3];

          			$results[$dev_name]['tx_bytes'] = $stats[8];
          			$results[$dev_name]['tx_packets'] = $stats[9];
          			$results[$dev_name]['tx_errs'] = $stats[10];
          			$results[$dev_name]['tx_drop'] = $stats[11];

          			$results[$dev_name]['errs'] = $stats[2] + $stats[10];
          			$results[$dev_name]['drop'] = $stats[3] + $stats[11];
        		}
      		}
    	}
	return $results;
}

?>
