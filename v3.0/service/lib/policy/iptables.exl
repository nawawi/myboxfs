<?php 
if($_AWIE_CODE!="ef3802a1fce98f3985e6a9a1f7c1a024") exit("\n\n<---[ closed. not parent ]--->\n\n");
$_ACCOUNT=array();
function policy_get_data(&$_dev,&$_local,&$_masqip,&$_ping,$db_id='') {
	global $_DB_NAME, $_QUIET;
	global $_ACCOUNT;

	$_ACCOUNT=array(); // reset
	$close_db=0;
	if($db_id=='') {
		$db_id=mybox_db_connect($_DB_NAME);
		$close_db=1;
	} 
	// nic list

	$result=mybox_db_query("select * from ipaddr where onboot='1'",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_ipaddrid=$row['id'];
			$_ipaddrname=$row['name'];
			$_ipaddrip=$row['ip'];
			$_ipprefix=$row['prefix'];
			$_ipaddrdev=$row['dev'];
			$_ipaddrtype=$row['type'];
			$_isdefault=$row['isdefault'];
			$_uplink=$row['uplink'];
			$_upprio=$row['upprio'];
			if($_upprio > 1) $_upprio--;
			$ret=mybox_ipcalc($_ipaddrip,$_ipprefix);
			$_ipnet=$ret['network'];

			if($_isdefault==1) {
				$_masqip[0]="$_ipaddrdev|$_ipaddrip";
				$_dev[0]="$_ipaddrdev";
			} else {
				if($_uplink==1) {
					if(isset($_masqip[$_upprio])&&$_masqip[$_upprio]!='') {
						$_upprio++;
						$_masqip[$_upprio]="$_ipaddrdev|$_ipaddrip";
					} else {
						$_masqip[$_upprio]="$_ipaddrdev|$_ipaddrip";
					}
				}
				$_dev[]="$_ipaddrdev";
			}
			$_local[$_ipaddrip]="$_ipaddrip";
			$_ping[]="$_ipaddrip|$_ipnet/$_ipprefix";
			$_ACCOUNT[$_ipaddrdev]="$_ipaddrip/$_ipprefix";
		}
	}
	unset($result);
	@ksort($_dev);
	$result=mybox_db_query("select ip from ipalias where onboot='1'",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_ip=$row['ip'];
			if($_ip=='') continue;
			if(!isset($_local[$_ip])||$_local[$_ip]=='') $_local[$_ip]="$_ip";
		}
	}
	unset($result);
	$result=mybox_db_query("select ip from vlan where onboot='1'",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_ip=$row['ip'];
			if($_ip=='') continue;
			if(!isset($_local[$_ip])||$_local[$_ip]=='') $_local[$_ip]="$_ip";
		}
	}
	unset($result);

	if($close_db==1) mybox_db_close($db_id);
}

function time_policy($_timeday,$_timestart,$_timeend) {
	$_cmdtime='';
	$_days='';
	if($_timeday!='') $_days="--days $_timeday";
	if(preg_match("/^(\d+)-(\d+)-(\d+)\s+(\d+):(\d+)$/",$_timestart,$_md1)) {
		$_cmdtime ="-m time $_days --datestart {$_md1[3]}:{$_md1[1]}:{$_md1[1]}:{$_md1[4]}:{$_md1[5]}";
		$_days='';
	}
	unset($_md1);
	if(preg_match("/^(\d+)-(\d+)-(\d+)$/",$_timestart,$_md1)) {
		$_cmdtime ="-m time $_days --datestart {$_md1[3]}:{$_md1[2]}:{$_md1[1]}";
		$_days='';
	}
	unset($_md1);
	if(preg_match("/^(\d+):(\d+):(\d+)$/",$_timestart,$_md1)) {
		$_cmdtime ="-m time $_days --timestart {$_md1[1]}:{$_md1[2]}:{$_md1[2]}";
		$_days='';
	}
	unset($_md1);
	if(preg_match("/^(\d+)-(\d+)-(\d+)\s+(\d+):(\d+)$/",$_timeend,$_md1)) {
		if($_cmdtime=='') {
			$_cmdtime ="-m time $_days --datestop {$_md1[3]}:{$_md1[2]}:{$_md1[1]}:{$_md1[4]}:{$_md1[5]}";
			$_days='';
		} else {
			$_cmdtime .=" --datestop {$_md1[3]}:{$_md1[2]}:{$_md1[1]}:{$_md1[4]}:{$_md1[5]}";
		}
	}
	unset($_md1);
	if(preg_match("/^(\d+)-(\d+)-(\d+)$/",$_timeend,$_md1)) {
		if($_cmdtime=='') {
			$_cmdtime ="-m time $_days --datestop {$_md1[3]}:{$_md1[2]}:{$_md1[1]}";
			$_days='';
		} else {
			$_cmdtime .=" --datestop {$_md1[3]}:{$_md1[2]}:{$_md1[1]}";
		}
	}
	unset($_md1);
	if(preg_match("/^(\d+):(\d+)$/",$_timeend,$_md1)) {
		if($_cmdtime=='') {
			$_cmdtime ="-m time $_days --timestop {$_md1[1]}:{$_md1[2]}";
			$_days='';
		} else {
			$_cmdtime .=" --timestop {$_md1[1]}:{$_md1[2]}";
		}
	}
	unset($_md1);
	if($_timeday!='' && $_cmdtime=='') {
		$_cmdtime ="-m time --days $_timeday";
	}
	return $_cmdtime;
}

function list_service_array($_defservice_array,$_name) {
	global $_PROTO;
	$_cmd_array=array();
	$_proto='';$_dport='';$_sport='';$_etc='';
	if(isset($_defservice_array[$_name]['name']) && $_defservice_array[$_name]['name']!='') {
		$_proto=$_defservice_array[$_name]['proto'];
		$_dport=$_defservice_array[$_name]['dport'];
		$_sport=$_defservice_array[$_name]['sport'];
		$_etc=$_defservice_array[$_name]['etc'];
		$_proto=$_PROTO[$_proto];
		if($_proto=="TCP") {
			$_cmd_array[]="-p tcp -m tcp --sport $_sport --dport $_dport";
		} elseif($_proto=="UDP") {
			$_cmd_array[]="-p udp -m udp --sport $_sport --dport $_dport";
		} elseif($_proto=="TCP/UDP") {
			$_cmd_array[]="-p tcp -m tcp --sport $_sport --dport $_dport";
			$_cmd_array[]="-p udp -m udp --sport $_sport --dport $_dport";
		} elseif($_proto=="ICMP") {
			$_cmd_array[]="-p icmp -m icmp --icmp-type $_etc";
		} elseif($_proto=="IP") {
			$_cmd_array[]="-p $_etc";
		} elseif($_proto=="ESP") {
			$_cmd_array[]="-p esp -m esp --espspi $_etc";
		} elseif($_proto=="AH") {
			$_cmd_array[]="-p ah -m ah --ahspi $_etc";
		}
	} elseif(isset($_defservice_array[$_name]['group']) && $_defservice_array[$_name]['group']!='') {
		foreach($_defservice_array[$_name] as $a => $b) {
			if(!is_array($b)) continue;
			$_proto=$b['proto'];
			$_dport=$b['dport'];
			$_sport=$b['sport'];
			$_etc=$b['etc'];
			$_proto=$_PROTO[$_proto];
			if($_proto=="TCP") {
				$_cmd_array[]="-p tcp -m tcp --sport $_sport --dport $_dport";
			} elseif($_proto=="UDP") {
				$_cmd_array[]="-p udp -m udp --sport $_sport --dport $_dport";
			} elseif($_proto=="TCP/UDP") {
				$_cmd_array[]="-p tcp -m tcp --sport $_sport --dport $_dport";
				$_cmd_array[]="-p udp -m udp --sport $_sport --dport $_dport";
			} elseif($_proto=="ICMP") {
				$_cmd_array[]="-p icmp -m icmp --icmp-type $_etc";
			} elseif($_proto=="IP") {
				$_cmd_array[]="-p $_etc";
			} elseif($_proto=="ESP") {
				$_cmd_array[]="-p esp -m esp --espspi $_etc";
			} elseif($_proto=="AH") {
				$_cmd_array[]="-p ah -m ah --ahspi $_etc";
			}
		}
	}
	return $_cmd_array;
}

function list_srcdst_array($_defnet_array,$_name,$opt,$eq) {
	/* from global.exl
	$_NTYPE['1']="Network";
	$_NTYPE['2']="IP Address";
	$_NTYPE['3']="IP Range";
	$_NTYPE['4']="MAC Address";

	opt: 1 = src, 2 = dst, 3=dnat/snat | just ip without option
	*/
	$_cmd_array=array();
	$_type='';$_ip='';
	if(isset($_defnet_array[$_name]['name']) && $_defnet_array[$_name]['name']!='') {
		$_type=$_defnet_array[$_name]['type'];
		$_ip=$_defnet_array[$_name]['ip'];
		if($_type==3) {
			if($opt==1) {
				$_cmd_array[]="-m iprange $eq--src-range $_ip";
			}
			if($opt==2) {
				$_cmd_array[]="-m iprange $eq--dst-range $_ip";
			}
		} elseif($_type==4) {
			// mac source only valid from input
			if($opt==1) $_cmd_array[]="-m mac --mac-source $eq$_ip";
		} else {
			// type 1 & 2
			if($opt==1) {
				$_cmd_array[]="-s $eq$_ip";
			}
			if($opt==2) {
				$_cmd_array[]="-d $eq$_ip";
			}
			if($opt==3) {
				$_cmd_array[]="$_ip";
			}
		}
	} elseif(isset($_defnet_array[$_name]['group']) && $_defnet_array[$_name]['group']!='') {
		foreach($_defnet_array[$_name] as $a => $b) {
			if(!is_array($b)) continue;
			$_type=$b['type'];
			$_ip=$b['ip'];
			if($_type==3) {
				if($opt==1) {
					$_cmd_array[]="-m iprange $eq--src-range $_ip";
				}
				if($opt==2) {
					$_cmd_array[]="-m iprange $eq--dst-range $_ip";
				}
			} elseif($_type==4) {
				// mac source only valid from input
				if($opt==1) $_cmd_array[]="-m mac --mac-source $eq$_ip";
			} else {
				// type 1 & 2
				if($opt==1) {
					$_cmd_array[]="-s $eq$_ip";
				}
				if($opt==2) {
					$_cmd_array[]="-d $eq$_ip";
				}
				if($opt==3) {
					$_cmd_array[]="$_ip";
				}
			}
		}
	}
	return $_cmd_array;
}


function list_service4nat_array($_defservice4nat_array,$_name,$_fwd_array,$type) {
	$_cmd_array=array();
	$_jump="-j DNAT --to-destination";
	if($type=='snat') {
		$_jump="-j SNAT --to-source";
	}
	$_dport='';
	if($_name!='any') {
		if(isset($_defservice4nat_array[$_name]['name']) && $_defservice4nat_array[$_name]['name']!='') {
			$_dport=$_defservice4nat_array[$_name]['dport'];
			foreach($_fwd_array as $fwd) {
				if($fwd=='') continue;
				$_cmd_array[]="$_jump $fwd:$_dport";
			}
		} elseif(isset($_defservice4nat_array[$_name]['group']) && $_defservice4nat_array[$_name]['group']!='') {
			foreach($_defservice4nat_array[$_name] as $a => $b) {
				if(!is_array($b)) continue;
				$_dport=$b['dport'];
				$fwd='';
				foreach($_fwd_array as $fwd) {
					if($fwd=='') continue;
					$_cmd_array[]="$_jump $fwd:$_dport";
				}
			}
		}
	} else {
		foreach($_fwd_array as $fwd) {
			if($fwd=='') continue;
			$_cmd_array[]="$_jump $fwd";
		}
	}
	return $_cmd_array;
}

function iptables_save() {
	@unlink("/var/sys/iptables.save");
	@shell_exec("/bin/iptables-save > /var/sys/iptables.save");
}

function iptables_restore() {
	global $_QUIET;
	if(!file_exists("/var/sys/iptables.save")) return 0;
	@shell_exec("/bin/iptables-restore < /var/sys/iptables.save");
	mybox_init_echo($_QUIET,"INFO","Loading previous Packet Filter rules");
}

function iptables_open($opt=0) {
	global $rules_file;
	iptables_save();
	if($opt==1) {
		$rules_file=popen("/bin/iptables-restore --noflush","w");
	} else {
		$rules_file=popen("/bin/iptables-restore","w");
	}
}

function iptables_close() {
	global $rules_file;
	if(isset($rules_file)) @pclose($rules_file);
}

function policy_close() {
	rules_commit();
	iptables_close();
}

function fwrite_tab($prog,$buf) {
	global $_QUIET, $_DEBUG, $_XLINE, $rules_file;

	if($_DEBUG==1) {
		echo "$_XLINE: $buf";
		$_XLINE++;
	}

	if(@fwrite($prog,$buf)==FALSE) {
		iptables_close();
		mybox_init_echo($_QUIET,"ERROR","Loading Packet Filter rules failed");
		iptables_restore();
		exit(1);
	}
}

function do_iptable($rules) {
	global $rules_file;
	fwrite_tab($rules_file,"$rules\n");
}

function rules_commit() {
	do_iptable("COMMIT");
}

function http_proxy_set() {
	iptables_open(1);
       	do_iptable("*nat");
	do_iptable(":ACL1006-01 - [0:0]");
}

function http_proxy_clear() {
	http_proxy_set();
	policy_close();
}

function http_proxy_policy() {
	$file="/var/sys/http_proxy_trans.set";
	if(!file_exists($file)) return;
	$buff=mybox_file2array($file);
	if(count($buff)!=0) {
		foreach($buff as $ln) {
			$ln=trim($ln);
			if($ln=='') continue;
			do_iptable("-A ACL1006-01 $ln");
		}
	}
}

function do_http_proxy_policy() {
	global $_QUIET;
	$file="/var/sys/http_proxy_trans.set";
	if(!file_exists($file)) return;
	mybox_init_echo($_QUIET,"INFO","Setting HTTP Proxy policy");
	http_proxy_set();
	http_proxy_policy();
	rules_commit();
	iptables_close();
}

function http_sg_policy_clear() {
	$policy_a=mybox_file2array("/var/sys/urlfilter_policy_drop");
	@unlink("/var/sys/urlfilter_policy_drop");
	if(count($policy_a)!=0) {
		iptables_open(1);
		do_iptable("*filter");
		foreach($policy_a as $ln) {
			$ln=trim($ln);
			if($ln=='') continue;
			do_iptable($ln);
		}
		rules_commit();
		iptables_close();
	}
}

function do_http_sg_policy() {
	$sgport=mybox_fget_contents("/var/sys/http-filter");
	$pport=mybox_fget_contents("/var/sys/http_proxy_port");
	$network=mybox_fget_contents("/var/sys/http_proxy_networks");
	
	$_captive_rules='';
	if(file_exists("/var/sys/chk_captived")) {
		$_captive_rules="-m mark --mark 4294967295";
	}
	if($network=='') return;
	$network="$network ";
	$rm='';
	policy_get_data(&$_dev,&$_int,&$_masqip,&$_ping);
	$sgnet_a=preg_split("/\s+/",$network);
	if($sgport!='' && count($sgnet_a)!=0) {
		if(is_array($_int) && count($_int)!=0) {
			iptables_open(1);
			do_iptable("*filter");
			foreach($sgnet_a as $src) {
				$src=trim($src);
				if($src=='') continue;
				foreach($_int as $_ip) {
					$rm .="-D ACL1000-01 $_captive_rules -s $src -d $_ip -p tcp -m tcp --dport $sgport -j ACCEPT\n";
					do_iptable("-I ACL1000-01 $_captive_rules -s $src -d $_ip -p tcp -m tcp --dport $sgport -j ACCEPT");	
				}
			}
			rules_commit();
			iptables_close();
		}
	}
	if($pport!='' && count($sgnet_a)!=0) {
		if(is_array($_int) && count($_int)!=0) {
			iptables_open(1);
			do_iptable("*filter");
			foreach($sgnet_a as $src) {
				$src=trim($src);
				if($src=='') continue;
				foreach($_int as $_ip) {
					$rm .="-D ACL1000-01 $_captive_rules -s $src -d $_ip -p tcp -m tcp --dport $pport -j ACCEPT\n";
					do_iptable("-I ACL1000-01 $_captive_rules -s $src -d $_ip -p tcp -m tcp --dport $pport -j ACCEPT");	
				}
			}
			rules_commit();
			iptables_close();
		}
	}
	if($rm!='') mybox_save_to_file("/var/sys/urlfilter_policy_drop","$rm");
}

function do_ftp_proxy_acl_policy_clear() {
	$policy_a=mybox_file2array("/var/sys/ftpproxy_policy_drop");
	@unlink("/var/sys/ftpproxy_policy_drop");
	if(count($policy_a)!=0) {
		iptables_open(1);
		do_iptable("*filter");
		foreach($policy_a as $ln) {
			$ln=trim($ln);
			if($ln=='') continue;
			do_iptable($ln);
		}
		rules_commit();
		iptables_close();
	}
}

function do_ftp_proxy_acl_policy() {
	$port=mybox_fget_contents("/var/sys/ftp_proxy_port");
	$network=mybox_fget_contents("/var/sys/ftp_proxy_networks");
	if($port=='') return;
	if($network=='') return;
	$rm='';
	policy_get_data(&$_dev,&$_int,&$_masqip,&$_ping);
	$network="$network ";
	$network_a=preg_split("/\s+/",$network);

	if($port!='' && count($network_a)!=0) {
		if(is_array($_int) && count($_int)!=0) {
			iptables_open(1);
			do_iptable("*filter");
			foreach($network_a as $src) {
				$src=trim($src);
				if($src=='') continue;
				foreach($_int as $_ip) {
					$rm .="-D ACL1000-01 -s $src -d $_ip -p tcp -m tcp --dport $port -j ACCEPT\n";
					do_iptable("-I ACL1000-01 -s $src -d $_ip -p tcp -m tcp --dport $port -j ACCEPT");	
				}
			}
			rules_commit();
			iptables_close();
		}
	}
	if($rm!='') mybox_save_to_file("/var/sys/ftpproxy_policy_drop","$rm");
}

function ftp_proxy_set() {
	iptables_open(1);
       	do_iptable("*nat");
	do_iptable(":ACL1006-003 - [0:0]");
}

function ftp_proxy_clear() {
	ftp_proxy_set();
	policy_close();
}
function ftp_proxy_policy() {
	$file="/var/sys/ftp_proxy_trans.set";
	if(!file_exists($file)) return;
	$buff=mybox_file2array($file);
	if(count($buff)!=0) {
		foreach($buff as $ln) {
			$ln=trim($ln);
			if($ln=='') continue;
			do_iptable("-A ACL1006-003 $ln");
		}
	}
}

function do_ftp_proxy_policy() {
	global $_QUIET;
	$file="/var/sys/ftp_proxy_trans.set";
	if(!file_exists($file)) return;
	mybox_init_echo($_QUIET,"INFO","Setting FTP Proxy policy");
	ftp_proxy_set();
	ftp_proxy_policy();
	policy_close();
}


function do_mail_acl_policy_clear() {
	$policy_a=mybox_file2array("/var/sys/mailproxy_policy_drop");
	@unlink("/var/sys/mailproxy_policy_drop");
	if(count($policy_a)!=0) {
		iptables_open(1);
		do_iptable("*filter");
		foreach($policy_a as $ln) {
			$ln=trim($ln);
			if($ln=='') continue;
			do_iptable($ln);
		}
		rules_commit();
		iptables_close();
	}
}

function do_mail_acl_policy() {
	$port=mybox_fget_contents("/var/sys/mail_proxy_port");
	$network=mybox_fget_contents("/var/sys/mail_proxy_networks");
	if($port=='') return;
	if($network=='') return;
	$rm='';
	policy_get_data(&$_dev,&$_int,&$_masqip,&$_ping);
	$network="$network ";
	$network_a=preg_split("/\s+/",$network);

	if($port!='' && count($network_a)!=0) {
		if(is_array($_int) && count($_int)!=0) {
			iptables_open(1);
			do_iptable("*filter");
			foreach($network_a as $src) {
				$src=trim($src);
				if($src=='') continue;
				foreach($_int as $_ip) {
					$rm .="-D ACL1000-01 -s $src -d $_ip -p tcp -m tcp --dport $port -j ACCEPT\n";
					do_iptable("-I ACL1000-01 -s $src -d $_ip -p tcp -m tcp --dport $port -j ACCEPT");	
				}
			}
			rules_commit();
			iptables_close();
		}
	}
	if($rm!='') mybox_save_to_file("/var/sys/mailproxy_policy_drop","$rm");
}

function mail_proxy_set() {
	iptables_open(1);
       	do_iptable("*nat");
	do_iptable(":ACL1006-004 - [0:0]");
}

function mail_proxy_clear() {
	mail_proxy_set();
	policy_close();
}
function mail_proxy_policy() {
	$file="/var/sys/mail_proxy_trans.set";
	if(!file_exists($file)) return;
	$buff=mybox_file2array($file);
	if(count($buff)!=0) {
		foreach($buff as $ln) {
			$ln=trim($ln);
			if($ln=='') continue;
			do_iptable("-A ACL1006-004 $ln");
		}
	}
}

function do_mail_proxy_policy() {
	global $_QUIET;
	$file="/var/sys/mail_proxy_trans.set";
	if(!file_exists($file)) return;
	mybox_init_echo($_QUIET,"INFO","Setting Mail Proxy policy");
	mail_proxy_set();
	mail_proxy_policy();
	policy_close();
}

function do_policy_account() {
	global $_ACCOUNT;
	if(file_exists("/var/sys/init_no_restart")) return;
	if(count($_ACCOUNT)!=0) {
		iptables_open(1);
		do_iptable("*mangle");
		do_iptable(":ACL1004-000 - [0:0]");
		foreach($_ACCOUNT as $name => $net) {
			if($name=='' || $net=='') continue;
			do_iptable("-A ACL1004-000 -m addrtype --src-type ! BROADCAST,NAT --dst-type ! BROADCAST,NAT -j ACCOUNT --addr $net --tname $name");
			if(!file_exists("/var/sys/init_account")) touch("/var/sys/init_account");
		}
		policy_close();
	}
}
?>
