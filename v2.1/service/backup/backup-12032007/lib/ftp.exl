<?
if($_AWIE_CODE!="ef3802a1fce98f3985e6a9a1f7c1a024") exit("\n\n<---[ closed. not parent ]--->\n\n");

function mybox_ftp_echo($what) {
	if(isset($_ENV['GATEWAY_INTERFACE'])) {
		echo "$what<br>";
	} else {
		echo "$what\n";
	}
}

function mybox_backup_restore_ftp($type,$fname,$bname) {
	global $_DB_NAME, $_DB_IPS, $_DB_BLACKLIST, $_DOWNLOAD_PATH, $_DB_PATH, $_SQLITE_BINARY;
	global $_LOGIN;
	$tname='RESTORE';
	if($type==1) $tname='BACKUP';
	
	if($bname==0) {
		$_DBS=$_DB_NAME;
	} elseif($bname==1) {
		$_DBS=$_DB_IPS;
	} elseif($bname==2) {
		$_DBS=$_DB_BLACKLIST;
	} else {
		$_DBS=$_DB_NAME;
	}
	$tty=0;
	$who="mfs@console";
	if(isset($_ENV['GATEWAY_INTERFACE'])) {
		$tty=1;
		$who="{$_LOGIN['auth_id']}@{$_LOGIN['auth_addr']}";
	}
	$val=array();
	$db_id=mybox_db_connect($_DB_NAME);
	$result=mybox_db_query("select * from misc where name like \"ftp_%\"",$db_id);
	if(mybox_db_num_rows($result)!=0) {
		while($row=mybox_db_fetch_assoc($result)) {
			$_name=$row['name'];
			$_val=$row['val'];
			$val[$_name]=$_val;
		}
	}
	$ftpserver=$val['ftp_server'];
	$ftpuser=$val['ftp_user'];
	$ftppass=mybox_str_decrypt($val['ftp_pass']);
	$ftppath=$val['ftp_path'];
	$ftppassive=$val['ftp_passive'];

	$conn_id=@ftp_connect($ftpserver); 
	mybox_ftp_echo("Sys> Making connection to $ftpserver");
	$login_result=@ftp_login($conn_id, $ftpuser, $ftppass); 
	if ((!$conn_id) || (!$login_result)) { 
		mybox_auditlog($tname,$who,"ftp -> $fname, connecting to $ftpserver with user $ftpuser failed!");
		mybox_ftp_echo("ftp> Connecting to $ftpserver with user $ftpuser failed!");
		return 1; 
   	}
	$systype = @ftp_systype($conn_id);
	@ftp_pasv($conn_id,$ftppassive);
	mybox_auditlog($tname,$who,"ftp -> $fname, connecting to $ftpserver system type $systype");
	mybox_ftp_echo("ftp> Connecting to $ftpserver system type $systype");
	if($ftppassive=='TRUE') {
		mybox_ftp_echo("ftp> Using passive transfer mode");
	} else {
		mybox_ftp_echo("ftp> Using native transfer mode");
	}
	if($type==1) @ftp_mkdir($conn_id,$ftppath);
	if(@!ftp_chdir($conn_id, $ftppath)) { 
   		mybox_auditlog($tname,$who,"ftp -> $fname, couldn't change remote directory '$ftppath'");
		mybox_ftp_echo("ftp> Couldn't change remote directory '$ftppath'");
		return 1;
	} else {
	   	mybox_auditlog($tname,$who,"ftp -> $fname, change remote directory to '$ftppath'");
		mybox_ftp_echo("ftp> Change remote directory to '$ftppath'");	
	}
	chdir($_DOWNLOAD_PATH);
	if($type==1) {
		if(file_exists("$_DOWNLOAD_PATH/$fname")) {
			$fp=@fopen("$_DOWNLOAD_PATH/$fname",'r');	
			$upload=@ftp_nb_fput($conn_id, $fname, $fp, FTP_BINARY);
			$remote_file_size=0;$local_file_size=0;$i=0;$ts=0;
			$local_file_size=filesize("$_DOWNLOAD_PATH/$fname");
			$ts=mybox_size_readable($local_file_size,null,'%d%s');
			if($tty==1) echo "<span id=xm></span>";
			while($upload == FTP_MOREDATA) {
				clearstatcache();
				if(!isset($conn_id2)) {
					$conn_id2=@ftp_connect($ftpserver);
					$login_result2=@ftp_login($conn_id2, $ftpuser, $ftppass);
				}
				if(isset($conn_id2)) {
					clearstatcache();
					$remote_file_size=@ftp_size($conn_id2, "$ftppath/$fname");
				}
  				if(isset($remote_file_size) && $remote_file_size > 0 ){
  					$i=($remote_file_size/$local_file_size)*100;
					$tt=mybox_size_readable($remote_file_size,null,'%d%s');
					if($tty==0 && $quiet==0) {
  						printf("\rUploading file $f.. %3.d%% %s of %s                ", $i, $tt, $ts);
					} else {
						$rr=sprintf("Uploading file $f.. %3d%% %s of %s", $i, $tt, $ts);
						echo "<script>document.getElementById('xm').innerHTML='$rr';</script>";
					}
  					flush();
 				} 
				$upload=ftp_nb_continue($conn_id);
			}

			if($upload != FTP_FINISHED) { 
				mybox_auditlog($tname,$who,"ftp -> $fname, backup failed.");
				mybox_ftp_echo("ftp> Uploading file $fname failed.");
			} else { 
				if(isset($conn_id2)) {
					clearstatcache();
					$remote_file_size=@ftp_size($conn_id2, "$ftppath/$fname");
				}
				if($i < 100 && $i!=0) {
					$tt=mybox_size_readable($remote_file_size,null,'%d%s');
					if($tty==0 && $quiet==0) {
      						printf("\rUploading file $f.. %3.d%% %s of %s                ", "100", $tt, $ts);
					} else {
						$rr=sprintf("Uploading file $f.. %3d%% %s of %s", "100", $tt, $ts);
						echo "<script>document.getElementById('xm').innerHTML='$rr';</script>";
					}
				}
				if($tty==0 && $remote_file_size!=0 && $quiet==0) echo "\n";
				if($tty==1 && $remote_file_size!=0 && $quiet==0) echo "<br>";
				mybox_auditlog($tname,$who,"ftp -> $fname, backup succeed.");
				mybox_ftp_echo("ftp> Uploading file $fname done.");
			}
			@fclose($fp);@ftp_close($conn_id2);
			@unlink("$_DOWNLOAD_PATH/$fname");
		}
	} else {
		$dld=0;$fs=0;$i=0;$ts=0;
		if(!file_exists("$_DOWNLOAD_PATH/$fname")) $fp=@fopen("$_DOWNLOAD_PATH/$fname",'w');
		$fs=@ftp_size($conn_id,$fname);
		$ts=mybox_size_readable($fs,null,'%d%s');
		$download=@ftp_nb_fget($conn_id, $fp, $fname, FTP_BINARY,FTP_AUTORESUME);
		mybox_ftp_echo("ftp> Getting file $fname..");
		if($tty==1) echo "<span id=xm></span>";
		while($download == FTP_MOREDATA) {
  			clearstatcache();
  			$dld=filesize("$_DOWNLOAD_PATH/$fname");
			if($dld > 0) {
      				$i = ($dld/$fs)*100;
				$tt=mybox_size_readable($dld,null,'%d%s');
				if($tty==0 && $quiet==0) {
					printf("\rGetting file $f.. %3.d%% %s of %s                ", $i, $tt, $ts);
				} else {
					$rr=sprintf("Getting file $f.. %3d%% %s of %s", $i, $tt, $ts);
					echo "<script>document.getElementById('xm').innerHTML='$rr';</script>";
				}
				flush();
  			}   
  			$download=@ftp_nb_continue($conn_id);
		}
		if($tty==0) echo "\n";
		if($download != FTP_FINISHED) {
			mybox_auditlog($tname,$who,"getting file $fname failed.");
			mybox_ftp_echo("ftp> Getting file $fname failed.");
			@fclose($fp);
			//@unlink("$_DOWNLOAD_PATH/$fname");
		} else {
			if($i < 100 && $i!=0) {
				clearstatcache();
  				$dld=filesize("$_DOWNLOAD_PATH/$fname");
				$tt=mybox_size_readable($dld,null,'%d%s');
				if($tty==0 && $quiet==0) {
					printf("\rGetting file $f.. %3.d%% %s of %s                ", "100", $tt, $ts);
				} else {
					$rr=sprintf("Getting file $f.. %3d%% %s of %s", "100", $tt, $ts);
					echo "<script>document.getElementById('xm').innerHTML='$rr';</script>";
				}
			}
			if($tty==0 && $dld!=0 && $quiet==0) echo "\n";
			if($tty==1 && $dld!=0 && $quiet==0) echo "<br>";
			mybox_auditlog($tname,$who,"getting file $fname.");
			mybox_ftp_echo("ftp> Getting file $fname done.");
			if(file_exists("$_DOWNLOAD_PATH/$fname")) {
				@copy("$_DB_PATH/$_DBS","$_DB_PATH/$_DBS".".bak");
				@unlink("$_DB_PATH/$_DBS");
				mybox_ftp_echo("Sys> Restoring $fname, please wait.");
				if(mybox_execq_cmd("zcat $_DOWNLOAD_PATH/$fname |$_SQLITE_BINARY $_DB_PATH/$_DBS")==0) {
					mybox_ftp_echo("Sys> Restore succeed.");
					mybox_auditlog($tname,$who,"ftp -> $fname, restore succeed.");
					@unlink("$_DB_PATH/$_DB_NAME".".bak");
				} else {
					@rename("$_DB_PATH/$_DBS".".bak","$_DB_PATH/$_DB_NAME");
					mybox_ftp_echo("Sys> Restore failed.");
					mybox_auditlog($tname,$who,"ftp -> $fname, restore failed.");
				}
				@fclose($fp);
				@unlink("$_DOWNLOAD_PATH/$fname");
			}
		}
	}
	@ftp_close($conn_id);
	mybox_auditlog($tname,$who,"Closing remote connection.");
	mybox_ftp_echo("Sys> Closing remote connection.");
	return 0;
}
?>