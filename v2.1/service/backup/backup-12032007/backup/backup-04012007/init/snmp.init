#!/bin/php -Cq
<?
// snmp.init - last update 30-Jun-2006
if(isset($_ENV['GATEWAY_INTERFACE'])||isset($_ENV['SERVER_PROTOCOL'])) exit;
$_AWIE_CODE="ef3802a1fce98f3985e6a9a1f7c1a024";
include_once('clib.exl');

putenv("PATH=/bin:/service/tools:/service/init");

if(!file_exists("/bin/snmpd")) {
	echo "Cannot execute snmp.init. Internal error!\n";
	mybox_slog("ERROR","Cannot execute snmp.init. Internal error!");
	exit(1);
}

$_QUIET=0;

$db_id=mybox_db_connect($_DB_NAME);
$_SNMP_STAT=0;
$_SNMP_PORT=161;
$_SNMP_COMMUNITY='public';
$_SNMP_LOCATION='/';
$_SNMP_CONTACT='mfs';

$result=mybox_db_query("select * from service_snmp",$db_id);
if(mybox_db_num_rows($result)!=0) {
	while($row=mybox_db_fetch_assoc($result)) {
		$_SNMP_STAT=$row['stat'];
		$_SNMP_PORT=$row['port'];
		$_SNMP_COMMUNITY=$row['comm'];
		$_SNMP_LOCATION=trim(mybox_unescape_str($row['location']));
		$_SNMP_CONTACT=trim(mybox_unescape_str($row['contact']));
	}
}
mybox_db_close($db_id);

function snmp_config() {
	global $_SNMP_PORT, $_SNMP_COMMUNITY;
	global $_SNMP_LOCATION, $_SNMP_CONTACT, $_QUIET;
	if(file_exists("/etc/services.lst")) {
		@copy("/etc/services.lst","/etc/services.tmp");
		mybox_append_to_file("/etc/services.tmp","snmp\t\t$_SNMP_PORT/udp\n");
		@copy("/etc/services.tmp","/etc/services");
		@unlink("/etc/services.tmp");
	}
	if($fi=fopen("/etc/snmpd.conf","w")) {
		fwrite($fi,"rocommunity $_SNMP_COMMUNITY\n");
		fwrite($fi,"syslocation $_SNMP_LOCATION\n");
		fwrite($fi,"syscontact $_SNMP_CONTACT\n");
		fclose($fi);
	}
	if($_QUIET==0) echo "* Writing SNMP config..\n";
	return 1;
}

function snmp_status() {
	global $_QUIET;
	$pid=mybox_get_progpid("snmpd");
	if($pid!='') {
		if($_QUIET==0) echo "* snmpd (pid $pid) is running...\n";
		return 0;
	}
	return 1;
}

function snmp_start() {
	global $_SNMP_STAT, $_QUIET;
	if($_SNMP_STAT==0) {
		@unlink("/var/sys/chk_snmpd");
		if($_QUIET==0) {
			echo "* SNMP agent disabled\n";
			mybox_slog("INFO","SNMP agent disabled");
		}
		exit(1);
	}
	if(@snmp_config()==1 && @snmp_status()==1) {
		if(mybox_exec_cmd("snmpd -l /dev/null -c /etc/snmpd.conf")==0) {
			if($_QUIET==0) {
				echo "* Starting SNMP agent\n";
				mybox_slog("INFO","Starting SNMP agent");
			}
			@touch("/var/sys/chk_snmpd");
			return 0;
		}
	}
	@touch("/var/sys/chk_snmpd");
	if($_QUIET==0) {
		echo "* Starting SNMP agent failed\n";
		mybox_slog("INFO","Starting SNMP agent failed");
	}
	return 1;
}

function snmp_stop() {
	global $_QUIET;
	@unlink("/var/sys/chk_snmpd");
	if(mybox_killall("snmpd")==0) {
		if($_QUIET==0) {
			echo "* Shutting down SNMP agent\n";
			mybox_slog("INFO","Shutting down SNMP agent");
		}
		return 0;
	}
	@touch("/var/sys/chk_snmpd");
	if($_QUIET==0) {
		echo "* Shutting down SNMP agent failed\n";
		mybox_slog("INFO","Shutting down SNMP agent failed");
	}
	return 1;
}

$ret=1;
$_app=basename($_SERVER["argv"][0]);
if($_SERVER["argv"][2]=='quiet') $_QUIET=1;
switch($_SERVER["argv"][1]) {
	case 'start':
		$ret=snmp_start();
		break;
	case 'stop':
		$ret=snmp_stop();
		break;
	case 'restart':
		$ret=snmp_stop();
		sleep(2);
		$ret=snmp_start();
		break;
	case 'status':
		$ret=snmp_status();
		break;
	case 'config':
		$ret=snmp_config();
		break;
	default:
		echo "Usage: $_app [start/stop/restart/status/config]\n";
		break;
}
flush();
exit($ret);
?>
