<?
if($_AWIE_CODE!="ef3802a1fce98f3985e6a9a1f7c1a024") exit("\n\n<---[ closed. not parent ]--->\n\n");

function rrdtool_exec($cmd) {
	mybox_exec_cmd("rrdtool $cmd");
	//system("rrdtool $cmd");
}

function get_rrd_lastupdate() {
	if(file_exists("/var/sys/rrd_lastupdate")) {
		if($fi=fopen("/var/sys/rrd_lastupdate","r")) {
			$buff=fgets($fi,50);
			fclose($fi);
			return trim($buff);
		}
	}
	return time();
}

function get_dev_traffic() {
	if($fd=fopen('/proc/net/dev', 'r')) {
		while($buf = fgets($fd, 4096)) {
        		if(preg_match('/:/', $buf)) {
          			list($dev_name, $stats_list)=preg_split('/:/', $buf, 2);
          			$stats=preg_split('/\s+/',trim($stats_list));
				$dev_name=trim($dev_name);
          			$results[$dev_name]=array();

          			$results[$dev_name]['rx_bytes'] = $stats[0];
          			$results[$dev_name]['rx_packets'] = $stats[1];
          			$results[$dev_name]['rx_errs'] = $stats[2];
          			$results[$dev_name]['rx_drop'] = $stats[3];

          			$results[$dev_name]['tx_bytes'] = $stats[8];
          			$results[$dev_name]['tx_packets'] = $stats[9];
          			$results[$dev_name]['tx_errs'] = $stats[10];
          			$results[$dev_name]['tx_drop'] = $stats[11];

          			$results[$dev_name]['errs'] = $stats[2] + $stats[10];
          			$results[$dev_name]['drop'] = $stats[3] + $stats[11];
        		}
      		}
    	}
	return $results;
}
function rrdtool_read($cmd) {
	$_line='';
	if($fi=popen("rrdtool $cmd","r")) {
		while(!feof($fi)) {
			$_line .=fgets($fi,4096);
		}
		pclose($fi);
	}
	return $_line;
}

function &rrdtool_function_fetch($rrd_source, $start_time, $end_time) {
	if(!file_exists($rrd_source)) return 0;

	$regexps=array();
	$fetch_array=array();
	$data_source_names=array();

	$output = rrdtool_read("fetch $rrd_source AVERAGE -s $start_time -e $end_time");

	$line_one = substr($output, 0, strpos($output, "\n"));

	if (preg_match_all("/\w+/", $line_one, $data_source_names)) {
		if (preg_match("/^timestamp/", $line_one)) {
			array_shift($data_source_names[0]);
		}

		$fetch_array["data_source_names"] = $data_source_names[0];

		for ($i=0;$i<count($fetch_array["data_source_names"]);$i++) {
			$regexps[$i] = '/[0-9]+:\s+';
			for ($j=0;$j<count($fetch_array["data_source_names"]);$j++) {
				if ($j == $i) {
					$regexps[$i] .= '([0-9]{1}\.[0-9]+)e([\+-][0-9]{2,3})';
				}else{
					$regexps[$i] .= '[0-9]{1}\.[0-9]+e[\+-][0-9]{2,3}';
				}

				if ($j < count($fetch_array["data_source_names"])) {
					$regexps[$i] .= '\s+';
				}
			}
			$regexps[$i] .= '/';
		}
	}

	$max_array = array();

	for ($i=0;$i<count($regexps);$i++) {
		$fetch_array["values"][$i] = array();

		if (preg_match_all($regexps[$i], $output, $matches)) {
			for ($j=0; ($j < count($matches[1])); $j++) {
				$line = ($matches[1][$j] * (pow(10,(float)$matches[2][$j])));
				array_push($fetch_array["values"][$i], ($line * 1));

				$max_array[$j][$i] = $line;
			}
		}
	}

	return $fetch_array;
}

function bandwidth_summation($rrd_source, $start_time, $end_time, $rra_steps, $ds_steps) {
	$fetch_array = rrdtool_function_fetch($rrd_source, $start_time, $end_time);

	if ((!isset($fetch_array["data_source_names"])) || (count($fetch_array["data_source_names"]) == 0)) {
		return;
	}

	$return_array = array();
	for ($i=0;$i<count($fetch_array["data_source_names"]);$i++) {
		$sum = 0;

		if (isset($fetch_array["values"][$i])) {
			$values_array = $fetch_array["values"][$i];

			for ($j=0;$j<count($fetch_array["values"][$i]);$j++) {
				$sum += $fetch_array["values"][$i][$j];
			}

			if (count($fetch_array["values"][$i]) != 0) {
				$sum = ($sum * $ds_steps * $rra_steps);
			}else{
				$sum = 0;
			}

			$return_array{$fetch_array["data_source_names"][$i]} = $sum;
		}
	}

	return $return_array;
}
$summation_cache = array();
function get_bandwidth_summation($rrd_source, $data_name, $graph_start=86400, $graph_end=300, $rra_step=1, $ds_step=300) {
	if(!file_exists($rrd_source)) return 0;

	$summation_timespan_start = $graph_start;
	$summation_timespan_end = $graph_end;

	if(!isset($summation_cache{$rrd_source})) {
		$summation_cache{$rrd_source} = bandwidth_summation($rrd_source, $summation_timespan_start, $summation_timespan_end, $rra_step, $ds_step);
	}

	$summation = 0;
	$summation = $summation_cache{$rrd_source}{$data_name};
	$summation=$summation * 8;
	if($summation < 1000) {
		$summation_label = "b";
	}elseif ($summation < 1000000) {
		$summation_label = "k";
		$summation /= 1000;
	}elseif ($summation < 1000000000) {
		$summation_label = "M";
		$summation /= 1000000;
	}elseif ($summation < 1000000000000) {
		$summation_label = "G";
		$summation /= 1000000000;
	}else{
		$summation_label = "T";
		$summation /= 1000000000000;
	}
	$summation=round($summation,2);
	return sprintf("%8.2lf %s",$summation,$summation_label);
}

?>