#!/bin/php -Cq
<?
// policy.init
// 13-Feb-2006 - add "--algo bm" for kernel 2.6.x
// 14-Feb-2006 - split blacklist db
// 03-Nov-2006 - check for finish loading

// last update 30-Jun-2006

$_AWIE_CODE="ef3802a1fce98f3985e6a9a1f7c1a024";
include_once('clib.exl');
putenv("PATH=/bin:/service/tools:/service/init");
if(!file_exists("/bin/iptables-restore")) {
	echo "! iptables binary not found or cannot execute\n";
	slog("iptables binary not found or cannot execute");
	exit(1);
}

$_QUIET=0;
$_XLINE=0;
function fwrite_tab($prog,$buf) {
	global $_QUIET, $_XLINE;
	if($_QUIET==2) {
		if(!fwrite($prog,$buf)) {
			echo "ERROR $_XLINE -> $buf";
		} else {
			echo "$_XLINE: $buf";
		}
	} else {
		@fwrite($prog,$buf);
	}
	$_XLINE++;
}

function filter_header() {
/*
IPS-DROP ACL1001
MYBOX-DROP ACL1002
MYBOX-IN-POLICY ACL1003
MYBOX-OUT-POLICY ACL1004
MYBOX-SWITCH ACL1005
*/
	global $rules_file;
	fwrite_tab($rules_file,"*mangle\n");
	fwrite_tab($rules_file,":PREROUTING ACCEPT [0:0]\n");
	fwrite_tab($rules_file,":INPUT ACCEPT [0:0]\n");
	fwrite_tab($rules_file,":FORWARD ACCEPT [0:0]\n");
	fwrite_tab($rules_file,":OUTPUT ACCEPT [0:0]\n");
	fwrite_tab($rules_file,":POSTROUTING ACCEPT [0:0]\n");
	fwrite_tab($rules_file,"COMMIT\n");
	fwrite_tab($rules_file,"*filter\n");
	fwrite_tab($rules_file,":INPUT DROP [0:0]\n");
	fwrite_tab($rules_file,":FORWARD DROP [0:0]\n");
	fwrite_tab($rules_file,":OUTPUT DROP [0:0]\n");
	fwrite_tab($rules_file,":ACL1001 - [0:0]\n");
	fwrite_tab($rules_file,":ACL1002 - [0:0]\n");
	fwrite_tab($rules_file,":ACL1003 - [0:0]\n");
	fwrite_tab($rules_file,":ACL1004 - [0:0]\n");
	fwrite_tab($rules_file,":ACL1005 - [0:0]\n");
}

function nat_header() {
	global $rules_file;
	fwrite_tab($rules_file,"*nat\n");
	fwrite_tab($rules_file,":PREROUTING ACCEPT [0:0]\n");
	fwrite_tab($rules_file,":POSTROUTING ACCEPT [0:0]\n");
	fwrite_tab($rules_file,":OUTPUT ACCEPT [0:0]\n");
}

function rules_commit() {
	global $rules_file;
	fwrite_tab($rules_file,"COMMIT\n");
}

function do_iptable($rules) {
	global $rules_file;
	fwrite_tab($rules_file,"$rules\n");
}

function icmp_ping($chain='INPUT',$src='',$dst='',$action='ACCEPT') {
	if($src!='') $src="-s $src";
	if($dst!='') $dst="-d $dst";
	foreach(array("8"=>"20","0"=>"10","3"=>"5","30"=>"10") as $t => $l) {
		do_iptable("-A $chain $src $dst -p icmp -m icmp --icmp-type $t -m limit --limit $l/sec -j $action");
	}
	return 0;
}

function time_policy($_timestart,$_timeend) {
	$_cmdtime='';
	if(preg_match("/^(\d+)-(\d+)-(\d+)\s+(\d+):(\d+)$/",$_timestart,$_md1)) {
		$_cmdtime ="-m time --datestart {$_md1[1]}:{$_md1[2]}:{$_md1[3]}:{$_md1[4]}:{$_md1[5]}";
	}
	unset($_md1);
	if(preg_match("/^(\d+)-(\d+)-(\d+)$/",$_timestart,$_md1)) {
		$_cmdtime ="-m time --datestart {$_md1[1]}:{$_md1[2]}:{$_md1[3]}";
	}
	unset($_md1);
	if(preg_match("/^(\d+):(\d+)/",$_timestart,$_md1)) {
		$_cmdtime ="-m time --timestart {$_md1[1]}:{$_md1[2]}";
	}
	unset($_md1);
	if(preg_match("/^(\d+)-(\d+)-(\d+)\s+(\d+):(\d+)$/",$_timeend,$_md1)) {
		if($_cmdtime=='') {
			$_cmdtime ="-m time --datestop {$_md1[1]}:{$_md1[2]}:{$_md1[3]}:{$_md1[4]}:{$_md1[5]}";
		} else {
			$_cmdtime .=" --datestop {$_md1[1]}:{$_md1[2]}:{$_md1[3]}:{$_md1[4]}:{$_md1[5]}";
		}
	}
	unset($_md1);
	if(preg_match("/^(\d+)-(\d+)-(\d+)$/",$_timeend,$_md1)) {
		if($_cmdtime=='') {
			$_cmdtime ="-m time --datestop {$_md1[1]}:{$_md1[2]}:{$_md1[3]}";
		} else {
			$_cmdtime .=" --datestop {$_md1[1]}:{$_md1[2]}:{$_md1[3]}";
		}
	}
	unset($_md1);
	if(preg_match("/^(\d+):(\d+)$/",$_timestart,$_md1)) {
		if($_cmdtime=='') {
			$_cmdtime ="-m time --timestop {$_md1[1]}:{$_md1[2]}";
		} else {
			$_cmdtime .=" --timestop {$_md1[1]}:{$_md1[2]}";
		}
	}
	unset($_md1);
	return $_cmdtime;
}

$_pptp_stat=0;

function policy_acl($_int,$db_id) {
	global $_pptp_stat;
	if(count($_int)==0) return 1;

	$_https_port=5051;
	$_ssh_port=5052;
	$_ftp_port=5053;
	$_ftp_port=5054;
	$result=db_query("select port from service_https",$db_id);
	if(db_num_rows($result)!=0) {
		$_https_port=db_fetch_single($result);
	}
	$result=db_query("select port from service_ssh",$db_id);
	if(db_num_rows($result)!=0) {
		$_ssh_port=db_fetch_single($result);
	}
	$result=db_query("select port,dport from service_ftp",$db_id);
	if(db_num_rows($result)!=0) {
		while($row=db_fetch_array_assoc($result)) {
			$_ftp_port=$row['port'];
			$_ftp_dport=$row['dport'];
		}
	}
	unset($row);
	// enable access list to network gateway
	$result=db_query("select * from accesslist where stat='1'",$db_id);
	$_fodrop=array();
	$_fodrop2=array();
	if(db_num_rows($result)!=0) {
		while($row=db_fetch_array_assoc($result)) {
			$_ipaddrip=$row['ip'];
			$_ssh=$row['ssh'];
			$_https=$row['https'];
			$_ftp=$row['ftp'];
			$_aport='';
			foreach($_int as $_ip) {
				if($_ip=='') continue;
				if($_https==1) $_aport="$_https_port,";
				if($_ssh==1) $_aport .="$_ssh_port,";
				if($_ftp==1) $_aport .="$_ftp_port,$_ftp_dport";
				$_aport=rtrim($_aport,",");
				do_iptable("-A INPUT -s $_ipaddrip -d $_ip -i eth+ -p tcp -m tcp -m multiport --dports $_aport -j ACCEPT");
				$_fodrop[]="-A INPUT -s ! $_ipaddrip -d $_ip -i eth+ -p tcp -m tcp -m multiport --dports $_aport -j DROP";
				if($_pptp_stat==1) $_fodrop[]="-A INPUT -s ! $_ipaddrip -d $_ip -i ppp+ -p tcp -m tcp -m multiport --dports $_aport -j DROP";
				$_fodrop2[]="-A FORWARD -s ! $_ipaddrip -d $_ip -i eth+ -p tcp -m tcp -m multiport --dports $_aport -j DROP";
				if($_pptp_stat==1) $_fodrop2[]="-A FORWARD -s ! $_ipaddrip -d $_ip -i ppp+ -p tcp -m tcp -m multiport --dports $_aport -j DROP";
				$_aport='';
				unset($dev,$_ip);
			}
		}
	}
	unset($result);
	if(count($_fodrop)!=0) {
		foreach($_fodrop as $acl) do_iptable($acl);
	}
	if(count($_fodrop2)!=0) {
		foreach($_fodrop2 as $acl) do_iptable($acl);
	}
	return 0;
}

function policy_inout_exec($type,$_proto,$src,$_srcpl,$dst,$_dstpl,$_cmdlog,$_cmdtime,$_action) {
	$_proto=strtolower($_proto);
	if($_proto=='tcp' || $_proto=='udp') {
		if($_cmdlog!='') {
			do_iptable("-A $type -p $_proto -m $_proto $src $_srcpl $dst $_dstpl $_cmdtime $_cmdlog");
		}
		do_iptable("-A $type -p $_proto -m $_proto $src $_srcpl $dst $_dstpl $_cmdtime -j $_action");
	} elseif($_proto=='tcp/udp') {
		foreach(array('tcp','udp') as $pp) {
			if($_cmdlog!='') {
				do_iptable("-A $type -p $pp -m $pp $src $_srcpl $dst $_dstpl $_cmdtime $_cmdlog");
			}
			do_iptable("-A $type -p $pp -m $pp $src $_srcpl $dst $_dstpl $_cmdtime -j $_action");
		}
		unset($pp);
	} elseif($_proto=='icmp') {
		if($_cmdlog!='') {
			do_iptable("-A $type -p icmp -m icmp $src $dst $_cmdtime $_cmdlog");
		}
		if($_action=='DROP') {
			do_iptable("-A $type -p icmp -m icmp $src $dst $_cmdtime -j DROP");
		} else {
			foreach(array("8"=>"20","0"=>"10","3"=>"5","30"=>"10") as $t => $l) {
				do_iptable("-A $type $src $dst -p icmp -m icmp --icmp-type $t $_cmdtime -m limit --limit $l/sec --limit-burst 4 -j ACCEPT");
			}
		}
	} elseif($_proto=='ipp2p') {
		if($_cmdlog!='') {
			do_iptable("-A $type -m ipp2p --ipp2p --debug $src $dst $_cmdtime -j $_action");
		} else {
			do_iptable("-A $type -m ipp2p --ipp2p $src $dst $_cmdtime -j $_action");
		}
	} else {
		if($_cmdlog!='') {
			do_iptable("-A $type -p $_proto $src $dst $_cmdtime $_cmdlog");
		}
		do_iptable("-A $type -p $_proto $src $dst $_cmdtime -j $_action");
	}
}

$list_array=array();
$list_array2=array();
$_KMSG=array();
$_IPP2P_INBOUND=array();
$_IPP2P_OUTBOUND=array();

function policy_inout($type,$db_id) {
	global $list_array, $list_array2, $_PORT_ARRAY;
	global $_KMSG, $_IPP2P_INBOUND, $_IPP2P_OUTBOUND;

	$table='policy_inbound';
	$_tt='I';
	if($type=='ACL1004') {
		$table='policy_outbound';
		$_tt='O';
	}
	$result=db_query("select * from $table where stat='1'",$db_id);
	if(db_num_rows($result)!=0) {
		while($row=db_fetch_array_assoc($result)) {
			$_id=$row['id'];
			$_proto=$row['proto'];
			$_srcn=$row['srcn'];
			$_src=trim($row['src']);
			$_srcp=$row['srcp'];
			$_dstn=$row['dstn'];
			$_dst=trim($row['dst']);
			$_dstp=$row['dstp'];
			$_action=$row['action'];
			$_usetime=$row['usetime'];
			$_timestart=$row['timestart'];
			$_timeend=$row['timeend'];
			$_log=$row['log'];
			$_stat=$row['stat'];
			$_note=unescape_str($row['note']);
			if($_note=='') $_note='none';

			$_cmdlog='';
			$_cmdtime='';
			$_src_array=array();
			$_dst_array=array();
			$_sport='';
			$_dport='';

			if($list_array[$_src]!='') $_src=$list_array[$_src];
			if($list_array[$_dst]!='') $_dst=$list_array[$_dst];
			if($list_array2[$_src]!='') $_src=$list_array2[$_src];
			if($list_array2[$_dst]!='') $_dst=$list_array2[$_dst];
			if($_PORT_ARRAY[$_srcp]!='') $_srcp=$_PORT_ARRAY[$_srcp];
			if($_PORT_ARRAY[$_dstp]!='') $_dstp=$_PORT_ARRAY[$_dstp];

			if($_proto=='IPP2P') {
				if($_tt=='I') {
					$_IPP2P_INBOUND[$_src][$_dst]="$_note|$_action";
				} else {
					$_IPP2P_OUTBOUND[$_src][$_dst]="$_note|$_action";
				}
			}

			$_srcnl='';$_dstnl='';
			if($_srcn==1) $_srcnl='! ';
			if($_dstn==1) $_dstnl='! ';

			if($_usetime==1) {
				$_cmdtime=time_policy($_timestart,$_timeend);
			}
			if($_log==1) {
				$_cmdlog="-m state --state NEW -m limit --limit 2/sec --limit-burst 10 -j LOG --log-level info --log-prefix \"F:$_tt:$_action:$_id \"";
				$_KMSG[$_tt][$_id]="$_note";
			}

			if($_action=='PASS') $_action='ACCEPT';

			if($_proto!='any') {
				if($_proto!='TCP' && $_proto!='UDP' && $_proto!='TCP/UDP') {
					$_srcp='any';
					$_dstp='any';
				}
			} else {
				$_proto='ALL';
			}

			if($_src!='any') {
				$slist=array();
				$slist=preg_split("/\s+/",$_src);
				if(count($slist)!=0) {
					foreach($slist as $list) {
						if(preg_match("/^(\d+)\.(\d+)\.(\d+)\.(\d+)\-(\d+)\.(\d+)\.(\d+)\.(\d+)$/",$list)) {
							$_src_array[]="-m iprange $_srcnl --src-range $list";
						} elseif(preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$list)) {
							$_src_array[]="-m mac --mac-source $_srcnl $list";
						} else {
							if(preg_match("/(\d+\.\d+\.\d+\.\d+)/",$list)) $_src_array[]="-s $_srcnl$list";
						}
					}
				} else {
					if(preg_match("/^(\d+)\.(\d+)\.(\d+)\.(\d+)\-(\d+)\.(\d+)\.(\d+)\.(\d+)$/",$_src)) {
						$_src_array[]="-m iprange $_srcnl --src-range $_src";
					} elseif(preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$_src)) {
						$_src_array[]="-m mac --mac-source $_srcnl $list";
					} else {
						if(preg_match("/(\d+\.\d+\.\d+\.\d+)/",$_src)) $_src_array[]="-s $_srcnl$_src";
					}
				}
			}
			if($_dst!='any') {
				$dlist=array();
				$dlist=preg_split("/\s+/",$_dst);
				if(count($dlist)!=0) {
					foreach($dlist as $list) {
						// ignore mac, mac only from source
						if(preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$list)) continue;
						if(preg_match("/^(\d+)\.(\d+)\.(\d+)\.(\d+)\-(\d+)\.(\d+)\.(\d+)\.(\d+)$/",$list)) {
							$_dst_array[]="-m iprange $_dstnl --dst-range $list";
						} else {
							if(preg_match("/(\d+\.\d+\.\d+\.\d+)/",$list)) $_dst_array[]="-d $_dstnl$list";
						}
					}
				} else {
					// ignore mac, mac only from source
					if(preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$_dst)) continue;
					if(preg_match("/^(\d+)\.(\d+)\.(\d+)\.(\d+)\-(\d+)\.(\d+)\.(\d+)\.(\d+)$/",$_dst)) {
						$_dst_array[]="-m iprange $_dstnl --dst-range $_dst";
					} else {
						if(preg_match("/(\d+\.\d+\.\d+\.\d+)/",$_dst)) $_dst_array[]="-d $_dstnl$_dst";
					}
				}
			}
			$_srcpl='';$_dstpl='';
			if($_srcp!='any') $_srcpl="--sport $_srcp";
			if($_dstp!='any') $_dstpl="--dport $_dstp";

			// -s src --sport sport -d dst --dport dport
			if(count($_src_array)!=0 && count($_dst_array)!=0) {
				foreach($_src_array as $src) {
					foreach($_dst_array as $dst) {
						policy_inout_exec($type,$_proto,$src,$_srcpl,$dst,$_dstpl,$_cmdlog,$_cmdtime,$_action);
						unset($src,$dst);
					}
				}
			} elseif(count($_src_array)!=0 && count($_dst_array)==0) {
				foreach($_src_array as $src) {
					policy_inout_exec($type,$_proto,$src,$_srcpl,'',$_dstpl,$_cmdlog,$_cmdtime,$_action);
					unset($src);
				}
			} elseif(count($_src_array)==0 && count($_dst_array)!=0) {
				foreach($_dst_array as $dst) {
					policy_inout_exec($type,$_proto,'',$_srcpl,$dst,$_dstpl,$_cmdlog,$_cmdtime,$_action);
					unset($src,$dst);
				}
			} else {
				policy_inout_exec($type,$_proto,'',$_srcpl,'',$_dstpl,$_cmdlog,$_cmdtime,$_action);
			}
		} // while
	}
}

function policy_blacklist($db_id) {
	global $_KMSG, $_DB_BLACKLIST;

	$result=db_query("select val from misc where name='blacklist_block'",$db_id);
	if(db_num_rows($result)!=0) {
		$_blacklist_block=db_fetch_single($result);
	}
	// 0 = inbound
	// 1 = outbound
	// 2 = both
	$db_id2=db_connect($_DB_BLACKLIST);
	$result=db_query("select * from policy_blacklist where stat='1'",$db_id2);
	if(db_num_rows($result)!=0) {
		while($row=db_fetch_array_assoc($result)) {
			$_id=$row['id'];
			$_ip=$row['ip'];
			$_log=$row['log'];
			$_note=unescape_str($row['note']);
			if($_note=='') $_note='none';
			if($_log==1) {
				if($_blacklist_block==2) {
					if(preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$_ip)) {
						do_iptable("-A ACL1002 -m mac --mac-source $_ip -m state --state NEW -m limit --limit 10/sec --limit-burst 10 -j LOG --log-level info --log-prefix \"F:B:DROP:$_id \"");
						do_iptable("-A ACL1002 -m mac --mac-source $_ip -j DROP");
					} else {
						do_iptable("-A ACL1002 -s $_ip -m state --state NEW -m limit --limit 10/sec --limit-burst 10 -j LOG --log-level info --log-prefix \"F:B:DROP:$_id \"");
						do_iptable("-A ACL1002 -s $_ip -j DROP");
						do_iptable("-A ACL1002 -d $_ip -m state --state NEW -m limit --limit 10/sec --limit-burst 10 -j LOG --log-level info --log-prefix \"F:B:DROP:$_id \"");
						do_iptable("-A ACL1002 -d $_ip -j DROP");
					}
				}
				if($_blacklist_block==1) {
					if(!preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$_ip)) {
						do_iptable("-A ACL1002 -d $_ip -m state --state NEW -m limit --limit 10/sec --limit-burst 10 -j LOG --log-level info --log-prefix \"F:B:DROP:$_id \"");
						do_iptable("-A ACL1002 -d $_ip -j DROP");
					}
				}
				if($_blacklist_block==0) {
					if(preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$_ip)) {
						do_iptable("-A ACL1002 -m mac --mac-source $_ip -m state --state NEW -m limit --limit 10/sec --limit-burst 10 -j LOG --log-level info --log-prefix \"F:B:DROP:$_id \"");
						do_iptable("-A ACL1002 -m mac --mac-source $_ip -j DROP");
					} else {
						do_iptable("-A ACL1002 -s $_ip -m state --state NEW -m limit --limit 10/sec --limit-burst 10 -j LOG --log-level info --log-prefix \"F:B:DROP:$_id \"");
						do_iptable("-A ACL1002 -s $_ip -j DROP");
					}
				}
				$_KMSG['B'][$_id]="$_note";
			} else {
				if($_blacklist_block==2) {
					if(preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$_ip)) {
						do_iptable("-A ACL1002 -m mac --mac-source $_ip -j DROP");
					} else {
						do_iptable("-A ACL1002 -s $_ip -j DROP");
						do_iptable("-A ACL1002 -d $_ip -j DROP");
					}
				}
				if($_blacklist_block==1) {
					if(!preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$_ip)) {
						do_iptable("-A ACL1002 -d $_ip -j DROP");
					}
				}
				if($_blacklist_block==0) {
					if(preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$_ip)) {
						do_iptable("-A ACL1002 -m mac --mac-source $_ip -j DROP");
					} else {
						do_iptable("-A ACL1002 -s $_ip -j DROP");
					}
				}
			}
		}
	}
	$result=db_query("select * from policy_blacklist_custom where stat='1'",$db_id2);
	if(db_num_rows($result)!=0) {
		while($row=db_fetch_array_assoc($result)) {
			$_id=$row['id'];
			$_ip=$row['ip'];
			$_log=$row['log'];
			$_note=unescape_str($row['note']);
			if($_note=='') $_note='none';
			if($_log==1) {
				if($_blacklist_block==2) {
					if(preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$_ip)) {
						do_iptable("-A ACL1002 -m mac --mac-source $_ip -m state --state NEW -m limit --limit 10/sec --limit-burst 10 -j LOG --log-level info --log-prefix \"F:B:DROP:$_id \"");
						do_iptable("-A ACL1002 -m mac --mac-source $_ip -j DROP");
					} else {
						do_iptable("-A ACL1002 -s $_ip -m state --state NEW -m limit --limit 10/sec --limit-burst 10 -j LOG --log-level info --log-prefix \"F:B:DROP:$_id \"");
						do_iptable("-A ACL1002 -s $_ip -j DROP");
						do_iptable("-A ACL1002 -d $_ip -m state --state NEW -m limit --limit 10/sec --limit-burst 10 -j LOG --log-level info --log-prefix \"F:B:DROP:$_id \"");
						do_iptable("-A ACL1002 -d $_ip -j DROP");
					}
				}
				if($_blacklist_block==1) {
					if(!preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$_ip)) {
						do_iptable("-A ACL1002 -d $_ip -m state --state NEW -m limit --limit 10/sec --limit-burst 10 -j LOG --log-level info --log-prefix \"F:B:DROP:$_id \"");
						do_iptable("-A ACL1002 -d $_ip -j DROP");
					}
				}
				if($_blacklist_block==0) {
					if(preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$_ip)) {
						do_iptable("-A ACL1002 -m mac --mac-source $_ip -m state --state NEW -m limit --limit 10/sec --limit-burst 10 -j LOG --log-level info --log-prefix \"F:B:DROP:$_id \"");
						do_iptable("-A ACL1002 -m mac --mac-source $_ip -j DROP");
					} else {
						do_iptable("-A ACL1002 -s $_ip -m state --state NEW -m limit --limit 10/sec --limit-burst 10 -j LOG --log-level info --log-prefix \"F:B:DROP:$_id \"");
						do_iptable("-A ACL1002 -s $_ip -j DROP");
					}
				}
				$_KMSG['B'][$_id]="$_note";
			} else {
				if($_blacklist_block==2) {
					if(preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$_ip)) {
						do_iptable("-A ACL1002 -m mac --mac-source $_ip -j DROP");
					} else {
						do_iptable("-A ACL1002 -s $_ip -j DROP");
						do_iptable("-A ACL1002 -d $_ip -j DROP");
					}
				}
				if($_blacklist_block==1) {
					if(!preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$_ip)) {
						do_iptable("-A ACL1002 -d $_ip -j DROP");
					}
				}
				if($_blacklist_block==0) {
					if(preg_match("/^([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})[-: ]?([0-9a-fA-F]{0,2})$/",$_ip)) {
						do_iptable("-A ACL1002 -m mac --mac-source $_ip -j DROP");
					} else {
						do_iptable("-A ACL1002 -s $_ip -j DROP");
					}
				}
			}
		}
	}
	$result=db_query("select version from policy_blacklist_info where id='1'",$db_id2);
	$blkv=db_fetch_single($result);
	file_put_contents("/etc/blacklistversion","$blkv\n");
	db_close($db_id2);
}

function policy_nat_exec($type,$_proto,$src,$dst,$_dstpl,$_fwdl,$_cmdlog,$_cmdtime) {
	$_natj="PREROUTING";
	if($type=='snat') $_natj="POSTROUTING";
	$_proto=strtolower($_proto);
	if($_proto=='tcp' || $_proto=='udp') {
		if($_cmdlog!='') {
			do_iptable("-A $_natj -p $_proto -m $_proto $src $dst $_dstpl $_cmdtime $_cmdlog");
		}
		do_iptable("-A $_natj -p $_proto -m $_proto $src $dst $_dstpl $_cmdtime $_fwdl");
	} elseif($_proto=='tcp/udp') {
		foreach(array('tcp','udp') as $pp) {
			if($_cmdlog!='') {
				do_iptable("-A $_natj -p $pp -m $pp $src $dst $_dstpl $_cmdtime $_cmdlog");
			}
			do_iptable("-A $_natj -p $pp -m $pp $src $dst $_dstpl $_cmdtime $_fwdl");
		}
		unset($pp);
	} else {
		if($_cmdlog!='') {
			do_iptable("-A $_natj -p ALL $src $dst $_cmdtime $_cmdlog");
		}
		do_iptable("-A $_natj -p ALL $src $dst $_cmdtime $_fwdl");
	}
}

function policy_nat($type,$db_id) {
	global $list_array, $list_array2, $_PORT_ARRAY;
	global $_KMSG;

	$_table="policy_dnat";
	if($type=='snat') $_table="policy_snat";
	$result=db_query("select * from $_table where stat='1'",$db_id);
	if(db_num_rows($result)!=0) {
		while($row=db_fetch_array_assoc($result)) {
			$_id=$row['id'];
			$_proto=$row['proto'];
			$_src=$row['src'];
			$_dst=$row['dst'];
			$_dstp=$row['dstp'];
			$_fwd=$row['fwd'];
			$_fwdp=$row['fwdp'];
			$_usetime=$row['usetime'];
			$_timestart=$row['timestart'];
			$_timeend=$row['timeend'];
			$_log=$row['log'];
			$_stat=$row['stat'];
			$_note=unescape_str($row['note']);
			if($_note=='') $_note='none';

			if($_fwd=='') continue;
			if($_proto=='') continue;

			$_cmdlog='';
			$_cmdtime='';
			$_src_array=array();
			$_dst_array=array();
			$_sport='';
			$_dport='';

			if($list_array[$_src]!='') $_src=$list_array[$_src];
			if($list_array[$_dst]!='') $_dst=$list_array[$_dst];
			if($list_array2[$_src]!='') $_src=$list_array2[$_src];
			if($list_array2[$_dst]!='') $_dst=$list_array2[$_dst];
			if($list_array2[$_fwd]!='') $_fwd=$list_array2[$_fwd];
			if($_PORT_ARRAY[$_dstp]!='') $_dstp=$_PORT_ARRAY[$_dstp];
			if($_PORT_ARRAY[$_fwdp]!='') $_fwdp=$_PORT_ARRAY[$_fwdp];

			if($_usetime==1) {
				$_cmdtime=time_policy($_timestart,$_timeend);
			}
			if($_log==1) {
				$_cmdlog="-m state --state NEW -m limit --limit 2/sec --limit-burst 10 -j LOG --log-level info --log-prefix \"F:$type:NAT:$_id \"";
				$_KMSG[$type][$_id]="$_note";
			}

			if($_src!='any') {
				$slist=array();
				$slist=preg_split("/\s+/",$_src);
				if(count($slist)!=0) {
					foreach($slist as $list) $_src_array[]="-s $list";
				} else {
					if(preg_match("/(\d+\.\d+\.\d+\.\d+)/",$_src)) $_src_array[]="-s $_src";
				}
			}
			if($_dst!='any') {
				$dlist=array();
				$dlist=preg_split("/\s+/",$_dst);
				if(count($dlist)!=0) {
					foreach($dlist as $list) $_dst_array[]="-d $list";
				} else {
					if(preg_match("/(\d+\.\d+\.\d+\.\d+)/",$_dst)) $_dst_array[]="-d $_dst";
				}
			}

			if($_dstp!='any') $_dstpl="--dport $_dstp";

			$_jump="-j DNAT --to-destination";
			if($type=='snat') {
				$_jump="-j SNAT --to-source";
			}
			$_ddst='';$_ddstp='';$_ddproto='';
			if($_fwdp!='any') {
				$_fwdl="$_jump $_fwd:$_fwdp";
				$_ddstp="--dport $_fwdp";
				$_ddst="-d $_fwd";
			} else {
				$_fwdl="$_jump $_fwd";
				$_ddst="-d $_fwd";
			}
			if($_proto=='any') {
				$_ddproto='ALL';
			} else {
				$_ddproto="$_proto";
			}

			// -s src --sport sport -d dst --dport dport
			if(count($_src_array)!=0 && count($_dst_array)!=0) {
				foreach($_src_array as $src) {
					foreach($_dst_array as $dst) {
						policy_nat_exec($type,$_proto,$src,$dst,$_dstpl,$_fwdl,$_cmdlog,$_cmdtime);
						unset($src,$dst);
					}
				}
			} elseif(count($_src_array)!=0 && count($_dst_array)==0) {
				foreach($_src_array as $src) {
					policy_nat_exec($type,$_proto,$src,$dst,$_dstpl,$_fwdl,$_cmdlog,$_cmdtime);
					unset($src);
				}
			} elseif(count($_src_array)==0 && count($_dst_array)!=0) {
				foreach($_dst_array as $dst) {
					policy_nat_exec($type,$_proto,'',$dst,$_dstpl,$_fwdl,$_cmdlog,$_cmdtime);
					unset($src,$dst);
				}
			} else {
				policy_nat_exec($type,$_proto,'','',$_dstpl,$_fwdl,$_cmdlog,$_cmdtime);
			}
		} // while
	}
}

function policy_start() {
	global $_DB_NAME, $_PORT_ARRAY;
	global $list_array, $list_array2, $_pptp_stat;
	global $_KMSG, $_IPP2P_INBOUND, $_IPP2P_OUTBOUND;
	global $rules_file;

	$db_id=db_connect($_DB_NAME);
	chk_valid_policy_input($db_id);
	$_dev=array();
	$_acl=array();
	$_pnl=array();
	$_masqip=array();
	$_wanip='';$_lanip='';
	$_pptp_stat=0;
	$_did='';$_did1='';$_did2='';$_did3='';
	// nic list
	$result=db_query("select * from ipaddr where onboot='1'",$db_id);
	if(db_num_rows($result)!=0) {
		while($row=db_fetch_array_assoc($result)) {
			$_ipaddrid=$row['id'];
			$_ipaddrname=$row['name'];
			$_ipaddrip=$row['ip'];
			$_ipaddrmask=$row['mask'];
			$_ipaddrdev=$row['dev'];
			$_ipaddrtype=$row['type'];
			$_name="$_ipaddrname"."-net";
			$ret=ipcalc($_ipaddrip,$_ipaddrmask);
			$_ipnet=$ret['network'];
			$_ippref=$ret['prefix'];
			$list_array[$_name]="$_ipnet/$_ippref";
			$list_array2[$_ipaddrname]="$_ipaddrip";
			if($_ipaddrid==1) $_wanip="$_ipaddrip";
			if($_ipaddrtype!=2) $_masqip[]="$_ipaddrdev|$_wanip";
			if($_ipaddrtype==1) $_did1 .="$_ipaddrdev,";
			if($_ipaddrtype==2) $_did2 .="$_ipaddrdev,";
			if($_ipaddrtype==3 && $_ipaddrid!=3) $_did3 .="$_ipaddrdev,";
			if($_ipaddrid==3) $_lanip="$_ipaddrdev";
			//$_dev[]="$_ipaddrdev";
			$_acl[]="$_ipaddrip";
			$_pnl[]="$_ipaddrip|$_ipnet/$_ippref";
		}
	}
	unset($result);
	$_did1=trim($_did1,",");
	$_did2=trim($_did2,",");
	$_did3=trim($_did3,",");
	$_did="$_did1,$_did2,$_did3,$_lanip";
	$_dev1=preg_split("/,/",$_did);
	if(count($_dev1)!=0) {
		foreach($_dev1 as $dt) {
			$dt=trim($dt);
			if($dt=='') continue;
			$_dev[]="$dt";
		}
	}
	$result=db_query("select ip from ipalias where onboot='1'",$db_id);
	if(db_num_rows($result)!=0) {
		while($row=db_fetch_array_assoc($result)) {
			$_ip=$row['ip'];
			if($_ip=='') continue;
			$list_array[$_ip]="$_ip";
			$list_array2[$_ip]="$_ip";
			$_acl[]="$_ip";
		}
	}
	unset($result);
	$result=db_query("select ip from vlan where onboot='1'",$db_id);
	if(db_num_rows($result)!=0) {
		while($row=db_fetch_array_assoc($result)) {
			$_ip=$row['ip'];
			if($_ip=='') continue;
			$list_array[$_ip]="$_ip";
			$list_array2[$_ip]="$_ip";
			$_acl[]="$_ip";
		}
	}
	unset($result);
	$result=db_query("select stat from pptp",$db_id);
	if(db_num_rows($result)!=0) {
		$_pptp_stat=db_fetch_single($result);
	}
	unset($result);

	$rules_file=popen("/bin/iptables-restore","w");

	slog("Loading firewall policy rules");
	$_tt=time()+60*2;
	@save_to_file("/var/sys/policy_load",$_tt);
	filter_header();

	do_iptable("-A INPUT -j ACL1001");
	do_iptable("-A FORWARD -j ACL1001");
	do_iptable("-A OUTPUT -j ACL1001");
	do_iptable("-A INPUT -j ACL1002");
	do_iptable("-A FORWARD -j ACL1002");
	do_iptable("-A OUTPUT -j ACL1002");

	do_iptable("-A INPUT -p all -i lo -s 127.0.0.1 -j ACCEPT");
	foreach($_acl as $_ip) {
		if($_ip=='') continue;
		do_iptable("-A INPUT -p all -i lo -s $_ip -j ACCEPT");
	}
	unset($dev,$_ip);

	do_iptable("-A INPUT -p tcp -m tcp ! --tcp-flags SYN,RST,ACK SYN -m state --state NEW -j DROP"); 
	do_iptable("-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT");

	// ACL
	policy_acl($_acl,$db_id);

	do_iptable("-A INPUT -j ACL1003");


	do_iptable("-A OUTPUT -p all -s 127.0.0.1 -j ACCEPT");
	foreach($_acl as $_ip) {
		if($_ip=='') continue;
		do_iptable("-A OUTPUT -p all -s $_ip -j ACCEPT");
	}
	unset($dev,$_ip);

	do_iptable("-A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT");
	do_iptable("-A OUTPUT -j ACL1004");

	do_iptable("-A FORWARD -p tcp -m tcp ! --tcp-flags SYN,RST,ACK SYN -m state --state NEW -j DROP"); 
	do_iptable("-A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT"); 
	do_iptable("-A FORWARD -j ACL1005");

	policy_inout("ACL1003",$db_id);
	if(count($_pnl)!=0) {
		foreach($_pnl as $_list) {
			list($_ip,$_net)=preg_split("/\|/",$_list);
			icmp_ping('ACL1003',$_net,$_ip);
		}
	}
	policy_inout("ACL1004",$db_id);


	// forward chain construct
	$IN=array();
	$OUT=array();

	// 22/02/2006
	// WAN
	// WAN2
	// DMZ
	// LAN
	$a=array();$a2=array();
	for($x=0;$x<count($_dev);$x++) {
		$a=$_dev[$x];
		foreach($_dev as $b) {
			if($b==$a || $a2[$b]==1) continue;
			$IN[]="-A ACL1005 -i $a -o $b -j ACL1003";
		}
		$a2[$a]=1;
	}
	unset($a,$b,$i,$x,$a2);
	for($x=count($_dev)-1;$x >= 0;$x--) {
		$a=$_dev[$x];
		foreach($_dev as $b) {
			if($b==$a || $a2[$b]==1) continue;
			$OUT[]="-A ACL1005 -i $a -o $b -j ACL1004";
		}
		$a2[$a]=1;
	}
	unset($a,$b,$i,$x,$a2);

	foreach($IN as $rr) do_iptable($rr);
	foreach($OUT as $rr) do_iptable($rr);

	if($_pptp_stat==1) {
		foreach($_dev as $a) do_iptable("-A ACL1005  -i ppp+ -o $a -j ACL1003");
		foreach($_dev as $a) do_iptable("-A ACL1005  -i $a -o ppp+ -j ACL1004");
		do_iptable("-A ACL1005 -i ppp+ -o ppp+ -j ACL1004");
		do_iptable("-A ACL1005 -i ppp+ -o ppp+ -j ACL1003");
	}
	// updated/log: 09/06/2006
	// old virus
	do_iptable("-A ACL1002 -p tcp -m tcp --dport 80 --tcp-flags ACK ACK -m string --algo bm --string \"root.exe\" -m state --state NEW -m limit --limit 6/minute --limit-burst 1 -j LOG --log-level info --log-prefix \"F:B:DROP:10000001 \"");
	do_iptable("-A ACL1002 -p tcp -m tcp --dport 80 --tcp-flags ACK ACK -m string --algo bm --string \"root.exe\" -j DROP");
	do_iptable("-A ACL1002 -p tcp -m tcp --dport 80 --tcp-flags ACK ACK -m string --algo bm --string \"/_vti_bin\" -m state --state NEW -m limit --limit 6/minute --limit-burst 1 -j LOG --log-level info --log-prefix \"F:B:DROP:10000002 \"");
	do_iptable("-A ACL1002 -p tcp -m tcp --dport 80 --tcp-flags ACK ACK -m string --algo bm --string \"/_vti_bin\" -j DROP");
	do_iptable("-A ACL1002 -p tcp -m tcp --dport 80 --tcp-flags ACK ACK -m string --algo bm --string \".ida?\" -m state --state NEW -m limit --limit 6/minute --limit-burst 1 -j LOG --log-level info --log-prefix \"F:B:DROP:10000003 \"");
	do_iptable("-A ACL1002 -p tcp -m tcp --dport 80 --tcp-flags ACK ACK -m string --algo bm --string \".ida?\" -j DROP");
	$_KMSG['B']['10000001']="Possible old virus: 'root.exe' access.";
	$_KMSG['B']['10000002']="Possible old virus: '/_vti_bin' access.";
	$_KMSG['B']['10000003']="Possible old virus: '.ida?' access.";
	// bad tcp flags: 09/06/2006
	do_iptable("-A ACL1002 -p tcp --tcp-option 64 -m recent --set -m state --state NEW -m limit --limit 6/minute --limit-burst 1 -j LOG --log-level info --log-prefix \"F:B:DROP:10000004 \"");
	do_iptable("-A ACL1002 -p tcp --tcp-option 64 -m recent --set -j DROP");
	do_iptable("-A ACL1002 -p tcp --tcp-option 64 -m recent --set -m state --state NEW -m limit --limit 6/minute --limit-burst 1 -j LOG --log-level info --log-prefix \"F:B:DROP:10000005 \"");
	do_iptable("-A ACL1002 -p tcp --tcp-option 128 -m recent --set -j DROP");
	$_KMSG['B']['10000004']="BAD TCP FLAGS: 64";
	$_KMSG['B']['10000005']="BAD TCP FLAGS: 128";
	// bogus: 09/06/2006
	do_iptable("-A ACL1002 -p all -m conntrack --ctstate INVALID -m state --state NEW -m limit --limit 6/minute --limit-burst 1 -j LOG --log-level info --log-prefix \"F:B:DROP:10000006 \"");
	do_iptable("-A ACL1002 -p all -m conntrack --ctstate INVALID -j DROP");
	$_KMSG['B']['10000006']="Bogus packets";

	// os fingerprint detection: 09/06/2006
	if(count($list_array2)!=0) {
		foreach($list_array2 as $nos => $nip) {
			if($nos=='' && $nip=='') continue;
			do_iptable("-A ACL1002 -p tcp --dport 0 -d $nip -m state --state NEW -m limit --limit 6/minute --limit-burst 1 -j LOG --log-level info --log-prefix \"F:B:DROP:10000007 \"");
			do_iptable("-A ACL1002 -p tcp --dport 0 -d $nip -j DROP");
			do_iptable("-A ACL1002 -p udp --dport 0 -d $nip -m state --state NEW -m limit --limit 6/minute --limit-burst 1 -j LOG --log-level info --log-prefix \"F:B:DROP:10000007 \"");
			do_iptable("-A ACL1002 -p udp --dport 0 -d $nip -j DROP");
			do_iptable("-A ACL1002 -p tcp --sport 0 -d $nip -m state --state NEW -m limit --limit 6/minute --limit-burst 1 -j LOG --log-level info --log-prefix \"F:B:DROP:10000007 \"");
			do_iptable("-A ACL1002 -p tcp --sport 0 -d $nip -j DROP");
			do_iptable("-A ACL1002 -p udp --sport 0 -d $nip -m state --state NEW -m limit --limit 6/minute --limit-burst 1 -j LOG --log-level info --log-prefix \"F:B:DROP:10000007 \"");
			do_iptable("-A ACL1002 -p udp --sport 0 -d $nip -j DROP");
			do_iptable("-A ACL1002 -p icmp --icmp-type address-mask-request -d $nip -m state --state NEW -m limit --limit 6/minute --limit-burst 1 -j LOG --log-level info --log-prefix \"F:B:DROP:10000007 \"");
			do_iptable("-A ACL1002 -p icmp --icmp-type address-mask-request -d $nip -j DROP");
			do_iptable("-A ACL1002 -p icmp --icmp-type address-mask-reply -d $nip -m state --state NEW -m limit --limit 6/minute --limit-burst 1 -j LOG --log-level info --log-prefix \"F:B:DROP:10000007 \"");
			do_iptable("-A ACL1002 -p icmp --icmp-type address-mask-reply -d $nip -j DROP");
		}
		$_KMSG['B']['10000007']="OS fingerprint detection";
	}
	policy_blacklist($db_id);
	rules_commit();

	nat_header();
	if(count($_masqip)!=0) {
		foreach($_masqip as $_lls) {
			if($_lls=='') continue;
			list($dev,$_ip)=preg_split("/\|/",$_lls);
			if($dev!='' && $_ip!='') do_iptable("-A POSTROUTING -o $dev -j SNAT --to-source $_ip");
		}
	}

	policy_nat('dnat',$db_id);
	policy_nat('snat',$db_id);

	rules_commit();
	@pclose($rules_file);

	file_put_contents("/var/sys/fwmsg",serialize($_KMSG));
	file_put_contents("/var/sys/ipp2pimsg",serialize($_IPP2P_INBOUND));
	file_put_contents("/var/sys/ipp2pomsg",serialize($_IPP2P_OUTBOUND));
	$_IDS_BLOCK=array();
	@file_put_contents("/var/sys/ipsblock",serialize($_IDS_BLOCK));
	if(file_exists("/strg/mybox/post-rules")) {
		@shell_exec("/bin/sh /strg/mybox/post-rules >/dev/null 2>&1");
	}
	@unlink("/var/sys/policy_load");
	return 0;
}

function policy_stop() {
	exec_cmd("iptables -F");
	exec_cmd("iptables -t nat -F");
	exec_cmd("iptables -t mangle -F");
	exec_cmd("iptables -X");
	exec_cmd("iptables -X");
	exec_cmd("iptables -t mangle -X");
	exec_cmd("iptables -Z");
	exec_cmd("iptables -P INPUT DROP");
	exec_cmd("iptables -P FORWARD DROP");
	exec_cmd("iptables -P OUTPUT DROP");
	exec_cmd("iptables -t nat -P PREROUTING ACCEPT");
	exec_cmd("iptables -t nat -P POSTROUTING ACCEPT");
	exec_cmd("iptables -t nat -P OUTPUT ACCEPT");
	slog("Stopping policy rules");
	@unlink("/var/sys/fwmsg");
	@unlink("/var/sys/ipp2pimsg");
	@unlink("/var/sys/ipp2pomsg");
	@unlink("/var/sys/policy_load");
	@file_put_contents("/var/sys/ipsblock",serialize($_IDS_BLOCK));
	return 0;
}

function policy_clear() {
	exec_cmd("iptables -F");
	exec_cmd("iptables -t nat -F");
	exec_cmd("iptables -t mangle -F");
	exec_cmd("iptables -X");
	exec_cmd("iptables -t nat -X");
	exec_cmd("iptables -t mangle -X");
	exec_cmd("iptables -Z");
	exec_cmd("iptables -P INPUT ACCEPT");
	exec_cmd("iptables -P FORWARD ACCEPT");
	exec_cmd("iptables -P OUTPUT ACCEPT");
	slog("Policy rules disabled!");
	@unlink("/var/sys/fwmsg");
	@unlink("/var/sys/ipp2pimsg");
	@unlink("/var/sys/ipp2pomsg");
	return 0;
}

$ret=1;
$_app=basename($_SERVER["argv"][0]);
if($_SERVER["argv"][2]=='quiet') $_QUIET=1;
if($_SERVER["argv"][2]=='debug') $_QUIET=2;

switch($_SERVER["argv"][1]) {
	case 'start':
		$ret=policy_start();
		break;
	case 'stop':
		$ret=policy_stop();
		break;
	case 'clear':
		$ret=policy_clear();
		break;
	case 'restart':
		$ret=policy_stop();
		sleep(2);
		$ret=policy_start();
		break;
	default:
		echo "Usage: $_app [start/stop/restart/clear]\n";
		break;
}
flush();
exit($ret);
?>

