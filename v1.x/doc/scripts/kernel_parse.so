#!/bin/php -q
<?
//
// Mybox Firewall - A Firewall Appliance
// http://www.mybox.net.my/
//
// (C) Copyright 2002,2003,2004 Mohd Nawawi Mohamad Jamili, TraceNetwork Corporation Sdn. Bhd.
//
// This program is not free software; you cannot redistribute it and/or
// modify without permission copyright owner.
//
// This code is protected by copyright law and international treaties. 
// Unauthorized reproduction or distribution of this program, or any portion of it, 
// may result in severe civil and criminal penalties, and will be prosecuted to the 
// maximum extent possible under the law.
//
// $Id: kernel_parse.so,v 2.11 2003/09/20 11:57 AM nawawi Exp $
//



	if(file_exists('scripts/functions.inc')) {
		include_once('scripts/functions.inc');
	} else {
		include_once('/usr/miniserv/scripts/functions.inc');
	}

	global $logdir;
	$logdir=get_ini('IPSYSCTL','REPORT');
	if($logdir=='NULL' || $logdir=='') {
		write_ini('IPSYSCTL','REPORT','/hd/reports/policy');
		$logdir='/hd/reports/policy';
	}
	if(!is_dir($logdir)) {
		shell_exec("mkdir -p $logdir");
	}
	
	function check_log_space() {
		// check if we mounted
		if(!is_dir('/hd/configs')) return 1;
		$size=disk_free_space("/hd/reports");
		if($size >= 1073741824) {
			if(file_exists('/tmp/no_log')) unlink('/tmp/no_log');
                        return 1;
                }
                if($size >= 1048576) {
			if(file_exists('/tmp/no_log')) unlink('/tmp/no_log');
                        return 1;
                }
                if($size >= 1024) {
                        return 0;
                }
                return 0;
	}

	function con_year() {
		global $logdir;
		$lyear=date('Y');
		$syear=date('y');
		$year="$syear:$lyear";
		$w='1';
		if(file_exists("$logdir/year.lst")) {
			$handle=fopen("$logdir/year.lst",'r');
			while(!feof($handle)) {
				$buff=fgets($handle,150);
				$buff=trim($buff);
				if($buff==$year) $w='0';
			}
			fclose($handle);
		}
		if($w==1) {
			$handle=fopen("$logdir/year.lst",'a');
			fputs($handle,"$year\n");
			fflush($handle);
			fclose($handle);
		}
	}

	function do_log($month,$day,$time,$policy,$action,$text,$src_ip,$src_po,$des_ip,$des_po,$proto) {
		global $logdir;
		if(check_log_space()==0) {
			if(!file_exists('/tmp/no_log')) touch('/tmp/no_log');
			return;
		}
		$year=date("Y");
		$mon=array("Jan"=>'01',"Feb"=>'02',"Mar"=>'03',"Apr"=>'04',"May"=>'05',"Jun"=>'06',"Jul"=>'07',"Aug"=>'08',"Sep"=>'09',"Oct"=>'10',"Nov"=>'11',"Dec"=>'12');
		$date="$day/$mon[$month]/$year";
		$time=_mktime($date,$time);
		$ldate=date('y')."-$mon[$month]"."-".date('d');
		$log="$logdir/$ldate.log";
		$mallog="$logdir/alert.log";
		$handle=fopen($log, "a");
		fputs($handle,"DATE=$date TIME=$time POLICY=$policy ACTION=$action STATUS=$text SRC_IP=$src_ip SRC_PO=$src_po DES_IP=$des_ip DES_PO=$des_po PROTO=$proto\n");
		fflush($handle);
		fclose($handle);
		$handle=fopen($mallog, "a");
		fputs($handle,"POLICY -> $date $time ($policy -> $action) $src_ip:$src_po -> $des_ip:$des_po ($proto) $text\n");
		fflush($handle);
		fclose($handle);
		con_year();
	}
	function log_parse($str) {
		$h1=shell_exec('hostname -s');
		list($hostname,$tmp)=preg_split("/\./",$h1);
		$hostname=trim($hostname);
		if(preg_match("/^(\w+)\s+(\d+)\s+(\d+\:\d+\:\d+)\s+$hostname\skernel\:\s*FW:(.*):(.*):(.*)\s*IN=(.*)\s*OUT=(.*)\s*MAC=(.*)\s*SRC=(.*)\s*DST=(.*)\s*LEN=(.*)\s*TOS=(.*)\s*PREC=(.*)\s*TTL=(.*)\s*ID=(.*)\s*PROTO=(.*)\s*SPT=(.*)\s*DPT=(.*)\s*WINDOW=(.*)\s*RES=(.*)\s*(.*)\s*URGP=(.*)$/",$str,$ft)) {
			$month=$ft[1];
			$day=$ft[2];
			$time=$ft[3];
			$policy=trim($ft[4]);
			$action=trim($ft[5]);
			$text=trim($ft[6]);
			$in=trim($ft[7]);
			$out=trim($ft[8]);
			$mac=trim($ft[9]);
			$src_ip=trim($ft[10]);
			$des_ip=trim($ft[11]);
			$proto=trim($ft[17]);
			$src_po=trim($ft[18]);
			$des_po=trim($ft[19]);
			switch($policy) {
				case 'F':
					$policy='FILTER';
				break;
				case 'W':
					$policy='FORWARD';
				break;
				case 'N':
					$policy='NAT';
				break;
				case 'S':
					$policy='STRING';
					$des_ip=gethostbyaddr($des_ip);
				break;
			}
			switch($action) {
				case 'D':
					$action='DROP';
				break;
				case 'A':
					$action='ACCEPT';
				break;
				case 'R':
					$action='REDIRECT';
				break;
			}
			do_log($month,$day,$time,$policy,$action,$text,$src_ip,$src_po,$des_ip,$des_po,$proto);
			return;
		} 
		if(preg_match("/^(\w+)\s+(\d+)\s+(\d+\:\d+\:\d+)\s+$hostname\skernel\:\s*FW:(.*):(.*):(.*)\s*IN=(.*)\s*OUT=(.*)\s*MAC=(.*)\s*SRC=(.*)\s*DST=(.*)\s*LEN=(.*)\s*TOS=(.*)\s*PREC=(.*)\s*TTL=(.*)\s*ID=(.*)\s*PROTO=(.*)\s*SPT=(.*)\s*DPT=(.*)\s*WINDOW=(.*)\s*RES=(.*)\s*(.*)\s*(.*)\s*URGP=(.*)$/",$str,$ft)) {
			$month=$ft[1];
			$day=$ft[2];
			$time=$ft[3];
			$policy=trim($ft[4]);
			$action=trim($ft[5]);
			$text=trim($ft[6]);
			$in=trim($ft[7]);
			$out=trim($ft[8]);
			$mac=trim($ft[9]);
			$src_ip=trim($ft[10]);
			$des_ip=trim($ft[11]);
			$proto=trim($ft[17]);
			$src_po=trim($ft[18]);
			$des_po=trim($ft[19]);
			switch($policy) {
				case 'F':
					$policy='FILTER';
				break;
				case 'W':
					$policy='FORWARD';
				break;
				case 'N':
					$policy='NAT';
				break;
				case 'S':
					$policy='STRING';
					$des_ip=gethostbyaddr($des_ip);
				break;
			}
			switch($action) {
				case 'D':
					$action='DROP';
				break;
				case 'A':
					$action='ACCEPT';
				break;
				case 'R':
					$action='REDIRECT';
				break;
			}
			do_log($month,$day,$time,$policy,$action,$text,$src_ip,$src_po,$des_ip,$des_po,$proto);
			return;
		} 
		if(preg_match("/^(\w+)\s+(\d+)\s+(\d+\:\d+\:\d+)\s+$hostname\skernel\:\s*FW:(.*):(.*):(.*)\s*IN=(.*)\s*OUT=(.*)\s*SRC=(.*)\s*DST=(.*)\s*LEN=(.*)\s*TOS=(.*)\s*PREC=(.*)\s*TTL=(.*)\s*ID=(.*)\s*PROTO=(.*)\s*SPT=(.*)\s*DPT=(.*)\s*LEN=(.*)$/",$str,$ft)) {
			$month=$ft[1];
			$day=$ft[2];
			$time=$ft[3];
			$policy=trim($ft[4]);
			$action=trim($ft[5]);
			$text=trim($ft[6]);
			$in=trim($ft[7]);
			$out=trim($ft[8]);
			$src_ip=trim($ft[9]);
			$des_ip=trim($ft[10]);
			$proto=trim($ft[16]);
			$src_po=trim($ft[17]);
			$des_po=trim($ft[18]);
			switch($policy) {
				case 'F':
					$policy='FILTER';
				break;
				case 'W':
					$policy='FORWARD';
				break;
				case 'N':
					$policy='NAT';
				break;
				case 'S':
					$policy='STRING';
					$des_ip=gethostbyaddr($des_ip);
				break;
			}
			switch($action) {
				case 'D':
					$action='DROP';
				break;
				case 'A':
					$action='ACCEPT';
				break;
				case 'R':
					$action='REDIRECT';
				break;
			}
			do_log($month,$day,$time,$policy,$action,$text,$src_ip,$src_po,$des_ip,$des_po,$proto);
			return;
		} 
		if(preg_match("/^(\w+)\s+(\d+)\s+(\d+\:\d+\:\d+)\s+$hostname\skernel\:\s*FW:(.*):(.*):(.*)\s*IN=(.*)\s*OUT=(.*)\s*SRC=(.*)\s*DST=(.*)\s*LEN=(.*)\s*TOS=(.*)\s*PREC=(.*)\s*TTL=(.*)\s*ID=(.*)\s*PROTO=(.*)\s*SPT=(.*)\s*DPT=(.*)?/",$str,$ft)) {
			$month=$ft[1];
			$day=$ft[2];
			$time=$ft[3];
			$policy=trim($ft[4]);
			$action=trim($ft[5]);
			$text=trim($ft[6]);
			$in=trim($ft[7]);
			$out=trim($ft[8]);
			$src_ip=trim($ft[9]);
			$des_ip=trim($ft[10]);
			$proto=trim($ft[16]);
			$src_po=trim($ft[17]);
			$des_po=trim($ft[18]);
			list($des_po,$rest)=preg_split("/\s+/",$des_po);
			switch($policy) {
				case 'F':
					$policy='FILTER';
				break;
				case 'W':
					$policy='FORWARD';
				break;
				case 'N':
					$policy='NAT';
				break;
				case 'S':
					$policy='STRING';
					$des_ip=gethostbyaddr($des_ip);
				break;
			}
			switch($action) {
				case 'D':
					$action='DROP';
				break;
				case 'A':
					$action='ACCEPT';
				break;
				case 'R':
					$action='REDIRECT';
				break;
			}
			do_log($month,$day,$time,$policy,$action,$text,$src_ip,$src_po,$des_ip,$des_po,$proto);
			return;
		}
	}

	function main_loop() {
        	$var='';
		for(;;) {
			sleep(1);
			if(file_exists('/var/log/policy.log')) {
                		$file=file('/var/log/policy.log');
				$val=$file[count($file)-1];
				if($val!=$var) {
                			log_parse($val);
				}
				if(count($file) > 50) {
					shell_exec('cat /dev/null > /var/log/policy.log');
					flush();
				}
				$var=$val;
				unset($file);
			}
			flush();
        	}
	}

	con_year();
	set_time_limit(0);
	main_loop();

?>
