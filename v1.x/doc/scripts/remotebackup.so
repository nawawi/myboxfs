#!/bin/php -q
<?
//
// Mybox Firewall - A Firewall Appliance
// http://www.mybox.net.my/
//
// (C) Copyright 2002,2003,2004 Mohd Nawawi Mohamad Jamili, TraceNetwork Corporation Sdn. Bhd.
//
// This program is not free software; you cannot redistribute it and/or
// modify without permission copyright owner.
//
// This code is protected by copyright law and international treaties. 
// Unauthorized reproduction or distribution of this program, or any portion of it, 
// may result in severe civil and criminal penalties, and will be prosecuted to the 
// maximum extent possible under the law.
//
// $Id: remotebackup.so,v 1.0 2003/10/19 11:26 AM nawawi Exp $
//

	if(file_exists('scripts/functions.inc')) {
		include_once('scripts/functions.inc');
	} else {
		include_once('/usr/miniserv/scripts/functions.inc');
	}
	if(file_exists('scripts/package.inc')) {
		include_once('scripts/package.inc');
	} else {
		include_once('/usr/miniserv/scripts/package.inc');
	}
	if($argv[1]=='show') {
		$show='1';
	} else {
		$show='0';
	}

	$rserver=get_ini('REMOTEBACKUP','SERVER');
	$rpath=get_ini('REMOTEBACKUP','PATH');
	$rlogin=get_ini('REMOTEBACKUP','LOGIN');
	$rpass=get_ini('REMOTEBACKUP','PASSWORD');
	$rfile=get_ini('REMOTEBACKUP','FILE');
	if($rfile!='NULL' || $rfile!='') {
		list($p1,$p2,$p3,$p4,$p5,$p6,$p7,$p8)=preg_split("/,/",$rfile);
	} else {
		exit;
	}
	if($p8=='0' && $show=='0') exit;
	global $rserver,$rpath,$rlogin,$rpass,$p7,$show;
	if($rserver=='NULL' || $rserver=='') exit;
	if($rpath=='NULL' || $rpath=='') exit;
	if($rlogin=='NULL' || $rlogin=='') exit;
	if($rpass=='NULL' || $rpass=='') exit;

	shell_exec("rm -rf /tmp/remotebackup");
	if(!is_dir('/tmp/remotebackup')) {
		shell_exec('mkdir -p /tmp/remotebackup');
	}
	clearstatcache();

	function ftp_con() {
		global $rserver,$rpath,$rlogin,$rpass,$p7,$show;
		$conn_id = @ftp_connect($rserver); 
		$login_result = @ftp_login($conn_id, $rlogin, $rpass); 
		if ((!$conn_id) || (!$login_result)) { 
       			write_rbackuplog("Attempted to connect to $ftp_server for user $ftp_user_name");
			if($show=='1') echo("Attempted to connect to $ftp_server for user $ftp_user_name\n");
			exit; 
   		}
		$systype = @ftp_systype($conn_id);
		$passive = ftp_pasv($conn_id,$p7);
		write_rbackuplog("Connecting to $rserver system type $systype");
		if($show=='1') echo("Connecting to $ftp_server system type $systype\n");
		if($p7=='1') {
			write_rbackuplog("Using passive transfer mode");
			if($show=='1') echo("Using passive transfer mode\n");
		} else {
			write_rbackuplog("Using native transfer mode");
			if($show=='1') echo("Using native transfer mode\n");
		}
		@ftp_mkdir($conn_id,$rpath);
		if (@!ftp_chdir($conn_id, $rpath)) { 
   			write_rbackuplog("Couldn't change remote directory");
			if($show=='1') echo("Couldn't change remote directory\n");
			exit;
		} 
		return $conn_id;
	}

	function ftp_exit($conn_id) {
		global $show;
		@ftp_close($conn_id); 
		write_rbackuplog("Closing remote connection.");
		if($show=='1') echo("Closing remote connection.\n");
	}

	function do_ftp($conn_id,$file) {
		global $show;
		$cwd=getcwd();
		chdir('/tmp/remotebackup');
		$upload = @ftp_put($conn_id, $file, $file, FTP_BINARY); 
		if(!$upload) { 
       			write_rbackuplog("Remote upload has failed.");
			if($show=='1') echo("Remote upload has failed.\n");
   		} else { 
       			write_rbackuplog("Backup for file $file done.");
			if($show=='1') echo("Backup for file $file done.\n");
   		} 
		chdir($cwd);
	}

	function configbackup($conn_id) {
		global $show;
		$date=date('ymd');
		@shell_exec("rm -rf /tmp/configs");
		@shell_exec("rm -f /tmp/remotebackup/mybox*.dat");
		@shell_exec("cp -a /hd/configs /tmp/remotebackup");
		$cwd=getcwd();
		chdir('/tmp/remotebackup');
		@unlink("configs/backup.lst");
		@unlink("configs/rbackup.lst");
		@unlink("configs/arp.lst");
		@unlink("configs/mybox-release");
		@unlink("configs/modules.lst");
		@unlink("configs/md5sum.lst");
		@unlink("configs/update.lst");
		@shell_exec("tar -zcf mybox_backup$date.dat configs");
		if(zip_encrypt("mybox_backup$date.dat")=='OK') {
			do_ftp($conn_id,"mybox_backup$date.dat");
			chdir($cwd);
		} else {
			write_rbackuplog("Backup for configuration file failure.");
			if($show=='1') echo("Backup for configuration file failure.\n");
		}
		@shell_exec("rm -f /tmp/remotebackup/mybox*.dat");
		@shell_exec("rm -rf /tmp/configs");
	}
	
	function idslogbackup($conn_id) {
		global $show;
		$date=date('ymd');
		$logdir=get_ini('IDS','REPORT');
		if(!is_dir('/tmp/remotebackup')) {
			shell_exec('mkdir -p /tmp/remotebackup');
		}
		clearstatcache();
		shell_exec("mkdir -p /tmp/remotebackup/idslog$date");
		$empty='0';
		if($handle = opendir("$logdir")) { 
   			while(($file = readdir($handle)) !== false) {  
       				if($file != "." && $file != "..") {
           				if(preg_match("/(\d+)-(\d+)-(\d+)-a.log/",$file)) {
						$empty++;
						shell_exec("cp -a $logdir/$file /tmp/remotebackup/idslog$date");
					}
       				}	 
  			}
   			closedir($handle);
			clearstatcache();
		} 
		if(is_dir("/tmp/remotebackup/idslog$date") && $empty!=0) {
			$cwd=getcwd();
			chdir('/tmp/remotebackup');
			shell_exec("tar -zcf idslog$date.tgz idslog$date");
			if(file_exists("idslog$date.tgz")) {
				do_ftp($conn_id,"idslog$date.tgz");
			} 
			chdir($cwd);
		} else {
			write_rbackuplog("Logs for IDS is empty. Nothing to backup");
			if($show=='1') echo("Logs for IDS is empty. Nothing to backup\n");
		}
		shell_exec("rm -rf /tmp/remotebackup/idslog*");
		clearstatcache();
	}

	function pscanlogbackup($conn_id) {
		global $show;
		$date=date('ymd');
		$logdir=get_ini('IDS','REPORT');
		if(!is_dir('/tmp/remotebackup')) {
			shell_exec('mkdir -p /tmp/remotebackup');
		}
		clearstatcache();
		shell_exec("mkdir -p /tmp/remotebackup/pscanlog$date");
		$empty='0';
		if($handle = opendir("$logdir")) { 
   			while(($file = readdir($handle)) !== false) {  
       				if($file != "." && $file != "..") {
           				if(preg_match("/(\d+)-(\d+)-(\d+)-p.log/",$file)) {
						$empty++;
						shell_exec("cp -a $logdir/$file /tmp/remotebackup/pscanlog$date");
					}	 
       				}	 
  			}
   			closedir($handle);
			clearstatcache();
		} 
		if(is_dir("/tmp/remotebackup/pscanlog$date") && $empty!=0) {
			$cwd=getcwd();
			chdir('/tmp/remotebackup');
			shell_exec("tar -zcf pscanlog$date.tgz pscanlog$date");
			if(file_exists("pscanlog$date.tgz")) {
				do_ftp($conn_id,"pscanlog$date.tgz");
			} 
			chdir($cwd);
		} else {
			write_rbackuplog("Logs for Portscan is empty. Nothing to backup");
			if($show=='1') echo("Logs for Portscan is empty. Nothing to backup\n");
		}
		shell_exec("rm -rf /tmp/remotebackup/pscanlog*");
		clearstatcache();
	}

	function policylogbackup($conn_id) {
		global $show;
		$date=date('ymd');
		$logdir=get_ini('IPSYSCTL','REPORT');
		if(!is_dir('/tmp/remotebackup')) {
			shell_exec('mkdir -p /tmp/remotebackup');
		}
		clearstatcache();
		shell_exec("mkdir -p /tmp/remotebackup/policylog$date");
		$empty='0';
		if($handle = opendir("$logdir")) { 
   			while(($file = readdir($handle)) !== false) {  
       				if($file != "." && $file != "..") {
           				if(preg_match("/(\d+)-(\d+)-(\d+).log/",$file)) {
						$empty++;
						shell_exec("cp -a $logdir/$file /tmp/remotebackup/policylog$date");
					}	 
       				}	 
  			}
   			closedir($handle);
			clearstatcache();
		} 
		if(is_dir("/tmp/remotebackup/policylog$date") && $empty!=0) {
			$cwd=getcwd();
			chdir('/tmp/remotebackup');
			shell_exec("tar -zcf policylog$date.tgz policylog$date");
			if(file_exists("policylog$date.tgz")) {
				do_ftp($conn_id,"policylog$date.tgz");
			} 
			chdir($cwd);
		} else {
			write_rbackuplog("Logs for Policy is empty. Nothing to backup");
			if($show=='1') echo("Logs for Policy is empty. Nothing to backup\n");
		}
		shell_exec("rm -rf /tmp/remotebackup/policylog*");
		clearstatcache();
	}

	function userlogbackup($conn_id) {
		global $show;
		$date=date('ymd');
		$logdir=get_ini('MINISERV','REPORT');
		if(!is_dir('/tmp/remotebackup')) {
			shell_exec('mkdir -p /tmp/remotebackup');
		}
		clearstatcache();
		shell_exec("mkdir -p /tmp/remotebackup/userlog$date");
		$empty='0';
		if($handle = opendir("$logdir")) { 
   			while(($file = readdir($handle)) !== false) {  
       				if($file != "." && $file != "..") {
           				if(preg_match("/(\d+)-(\d+)-(\d+).log/",$file)) {
						$empty++;
						shell_exec("cp -a $logdir/$file /tmp/remotebackup/userlog$date");
					}	 
       				}	 
  			}
   			closedir($handle);
			clearstatcache();
		} 
		if(is_dir("/tmp/remotebackup/userlog$date") && $empty!=0) {
			$cwd=getcwd();
			chdir('/tmp/remotebackup');
			shell_exec("tar -zcf userlog$date.tgz userlog$date");
			if(file_exists("userlog$date.tgz")) {
				do_ftp($conn_id,"userlog$date.tgz");
			} 
			chdir($cwd);
		} else {
			write_rbackuplog("Logs for User is empty. Nothing to backup");
			if($show=='1') echo("Logs for User is empty. Nothing to backup\n");
		}
		shell_exec("rm -rf /tmp/remotebackup/userlog*");
		clearstatcache();
	}

	function graphbackup($conn_id) {
		global $show;
		$date=date('ymd');
		$graphdir=get_ini('GRAPH','IMGDIR');
		if(!is_dir('/tmp/remotebackup')) {
			shell_exec('mkdir -p /tmp/remotebackup');
		}
		if(is_dir($graphdir)) {
			$empty='0';
			$cwd=getcwd();
			chdir('/tmp/remotebackup');
			shell_exec("mkdir -p /tmp/remotebackup/graph$date");
			if($handle = opendir("$graphdir")) { 
   				while(($file = readdir($handle)) !== false) {  
       					if($file != "." && $file != "..") {
           					if(preg_match("/(.*).png/",$file)) {
							$empty++;
							shell_exec("cp -a $graphdir/$file /tmp/remotebackup/graph$date");
						}	 
       					}	 
  				}
   				closedir($handle);
				clearstatcache();
			} 
			if($empty!='0') {
				shell_exec("tar -zcf graph$date.tgz graph$date");
				if(file_exists("graph$date.tgz")) {
					do_ftp($conn_id,"graph$date.tgz");
				} 
			} else {
				write_rbackuplog("Graph empty. Nothing to backup");
				if($show=='1') echo("Graph empty. Nothing to backup\n");
			}
			chdir($cwd);
		} else {
			write_rbackuplog("Graph empty. Nothing to backup");
			if($show=='1') echo("Graph empty. Nothing to backup\n");
		}
		shell_exec("rm -rf /tmp/remotebackup/graph*");
		clearstatcache();
	}
	set_time_limit(0);
	$conn_id=ftp_con();
	if($p1=='1') configbackup($conn_id);
	if($p2=='1') pscanlogbackup($conn_id);
	if($p3=='1') idslogbackup($conn_id);
	if($p4=='1') policylogbackup($conn_id);
	if($p5=='1') userlogbackup($conn_id);
	if($p6=='1') graphbackup($conn_id);
	shell_exec("/bin/rm -rf /tmp/remotebackup");
	ftp_exit($conn_id);
	if(!file_exists('/tmp/remotebackup')) {
		write_rbackuplog("Remote backup done.");
		if($show=='1') echo "Remote backup done.";
	}
	exit;
?>
